{"version":3,"file":"static/js/338.966650d5.chunk.js","mappings":"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","sources":["components/EchartCore/EchartCore.tsx","components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/FileUploadPlus/FileUploadPlus.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx","pages/ChartOptionTempalte.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport * as echarts from 'echarts';\n// import * as echarts from 'echarts/core';\n// import {\n//     BarChart,\n//     // 系列类型的定义后缀都为 SeriesOption\n//     BarSeriesOption,\n//     PieChart,\n//     PieSeriesOption,\n//     LineChart,\n//     LineSeriesOption,\n//     HeatmapChart,\n//     HeatmapSeriesOption\n// } from 'echarts/charts';\n// import {\n//     TitleComponent,\n//     // 组件类型的定义后缀都为 ComponentOption\n//     TitleComponentOption,\n//     TooltipComponent,\n//     TooltipComponentOption,\n//     GridComponent,\n//     GridComponentOption,\n//     // 数据集组件\n//     DatasetComponent,\n//     DatasetComponentOption,\n//     LegendComponent,\n//     // 内置数据转换器组件 (filter, sort)\n//     TransformComponent,\n//     CalendarComponentOption,\n//     CalendarComponent,\n//     VisualMapComponent,\n//     VisualMapComponentOption,\n//     ToolboxComponent\n// } from 'echarts/components';\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport './EchartCore.less';\nimport { Spin } from 'antd';\nimport { FieldNumberOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\n\nexport type ECOption = echarts.EChartsOption\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\n// export type ECOption = echarts.ComposeOption<\n//     | BarSeriesOption\n//     | LineSeriesOption\n//     | TitleComponentOption\n//     | TooltipComponentOption\n//     | GridComponentOption\n//     | DatasetComponentOption\n//     | CalendarComponentOption\n//     | HeatmapSeriesOption\n//     | VisualMapComponentOption\n//     | PieSeriesOption\n// >;\n\n// // 注册必须的组件\n// echarts.use([\n//     LegendComponent,\n//     TitleComponent,\n//     TooltipComponent,\n//     GridComponent,\n//     DatasetComponent,\n//     TransformComponent,\n//     CalendarComponent,\n//     VisualMapComponent,\n//     ToolboxComponent,\n//     BarChart,\n//     LineChart,\n//     PieChart,\n//     LabelLayout,\n//     HeatmapChart,\n//     UniversalTransition,\n//     CanvasRenderer\n// ]);\n\ninterface IProps {\n    // option: ECOption\n    option: echarts.EChartsOption\n    loading?: boolean\n    title?: string\n    style?: React.CSSProperties\n    unit?: string\n    data?: {\n        xData: any[]\n        yData: any[]\n    }\n    isNoData?: boolean\n}\n\nconst defaultChartStyle: React.CSSProperties = {\n    height: 300\n}\n\n// https://echarts.apache.org/handbook/zh/how-to/data/dynamic-data\nexport default function EchartCore(props: IProps) {\n    const [chartInstance, setChartInstance] = useState<echarts.ECharts>()\n    const id = Math.random().toString(36).substring(2);\n    const { t, i18n } = useTranslation();\n\n    const option = {}\n\n    useEffect(() => {\n        const chartDom = document.getElementById(id)\n        if (chartDom) {\n            const chart = echarts.init(chartDom);\n            chart.setOption({ ...option, ...props.option })\n\n            if (!chartInstance) {\n                setChartInstance(chart)\n            }\n        }\n    }, [props.option, props.data])\n\n    return (\n        <Spin spinning={props.loading}>\n            <div className=\"chart-container\">\n                <div id={id} style={{ ...defaultChartStyle, ...props.style }}></div>\n                {\n                    props.isNoData ? <div className=\"chart-nodata\">\n                        <div>{t('暂无数据')}</div>\n                    </div> : null\n                }\n            </div>\n        </Spin>\n    )\n}\n","import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\n// import ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst customizeRenderEmpty = () => (\n\t\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t\t<div>{t('暂无数据')}</div>\n\t\t</Row>\n\t);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== t('操作'));\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\t// const handleClickOutputExcel = () => {\n\t// \tconst option: any = {};\n\t// \toption.fileName = 'result';\n\t// \toption.datas = [\n\t// \t\t{\n\t// \t\t\tsheetData: dataFormat.data,\n\t// \t\t\tsheetName: 'sheet',\n\t// \t\t\tsheetHeader: dataFormat.header,\n\t// \t\t},\n\t// \t];\n\t// \tconst toExcel = new ExportJsonExcel(option);\n\t// \ttoExcel.saveExcel();\n\t// };\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={t('导出数据')}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">{t('选择需要导出的列')}：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('全选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('反选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t{/* <Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane> */}\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t{t('导出数据')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst { t, i18n } = useTranslation();\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText={t('确定')}\n\t\t\tcancelText={t('取消')}\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\nimport { useTranslation } from 'react-i18next';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请选择key') }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('请选择')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请填写value') }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t{t('查询')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>{t('展开')}</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>{t('收起')}</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import { AudioOutlined, CloseOutlined, DeleteColumnOutlined, DeleteFilled, DeleteOutlined, InboxOutlined, LoadingOutlined, PlusOutlined, VideoCameraAddOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { useEffect, useState } from 'react'\nimport './FileUploadPlus.less';\n\ninterface Iprops {\n    type?: TFileType\n    onChange?: (value: any) => void\n    value?: string[]\n    maxCount?: number\n    maxSize?: number\n    format?: string[]\n}\n\ntype TFileType = 'file' | 'video' | 'audio'\n\nexport default function FileUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n    const [fileList, setFileList] = useState<UploadFile[]>([])\n\n    // useEffect(() => {\n    //     setFileList(props.value || [])\n    // }, [props.value])\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: RcFile) {\n        console.log('file', file);\n\n        const maxCount = props.maxCount || 1\n        if (fileList.length >= maxCount) {\n            message.error('超出文件数量限制');\n            return false\n        }\n        // 'image/jpeg' || 'video/mp4' || 'audio/mpeg'\n        const isFormatOk = props.format?.includes(file.type);\n        if (!isFormatOk) {\n            message.error('文件格式错误');\n        }\n        const isLt2M = file.size < (props.maxSize || 2 * 1024 * 1024);\n        if (!isLt2M) {\n            message.error('文件大小限制');\n        }\n        return isFormatOk && isLt2M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n        }\n        if (info.file.status === \"removed\") {\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n            return;\n        }\n    };\n\n    const file2Bin = (file?: RcFile) => {\n        console.log('file2Bin', file);\n        return new Promise((resolve, reject) => {\n            if (file) {\n                let name = file.name.replace(/.+\\./, '');\n                let filename = file.name;\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => {\n                    resolve(reader.result)\n                }\n            } else {\n                reject(undefined)\n            }\n        })\n    }\n\n    //建立一个可存取到该file的url\n    function getObjectURL(file: any) {\n        var url = null;\n        if ((window as any).createObjectURL != undefined) { // basic\n            url = (window as any).createObjectURL(file);\n        } else if (window.URL != undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file);\n        } else if (window.webkitURL != undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file);\n        }\n        return url;\n    }\n\n    const createMediaPreview = (file: UploadFile<any>, fileIndex: number, type: TFileType) => {\n        const url = getObjectURL(file)\n        const key = Math.random().toString(36).substring(2);\n        if (type === 'video') {\n            return <div className=\"p-r\" key={key}>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                        props.onChange && props.onChange(currentFileList)\n                    }}\n                    className=\"d-il p-a plr8 ptb2 bg-fail\"\n                    style={{ top: 0, right: 0, borderBottomLeftRadius: 6, zIndex: 9 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n                <video className=\"w100 mb8\" src={url} controls></video>\n            </div>\n        } else if (type === 'audio') {\n            return <div className=\"d-f ac mb8\" key={key}>\n                <audio className=\"w100 flex1\" src={url} controls></audio>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                        props.onChange && props.onChange(currentFileList)\n                    }}\n                    className=\"d-il plr8 ptb2 bg-fail\"\n                    style={{ borderRadius: 6 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n            </div>\n        }\n        return file\n    }\n\n    return (\n        <>\n            <div>\n                {\n                    fileList.map((file, fileIndex) => {\n                        return createMediaPreview(file, fileIndex, props.type || 'file')\n                    })\n                }\n            </div>\n            <Upload.Dragger\n                // name=\"file\"\n                fileList={fileList}\n                showUploadList={false}\n                customRequest={(options) => {\n                    console.log(options.file);\n                    const tarList = [...fileList, options.file as RcFile]\n                    setFileList(tarList)\n\n                    Promise.all(tarList.map((item: any) => file2Bin(item))).then(res => {\n                        console.log(res)\n                        props.onChange && props.onChange(res)\n                    })\n\n                    // getBase64(options.file, (imageUrl: string) => {\n                    //     // setImgUrl(imageUrl);\n                    //     const tarList = [...imageList, imageUrl]\n                    //     setImageList(tarList)\n                    //     setFileLoading(false);\n                    //     props.onChange && props.onChange(tarList)\n                    // });\n                }}\n                beforeUpload={beforeUpload}\n                onChange={handleChange}\n            >\n                <p className=\"ant-upload-drag-icon\">\n                    {\n                        (props.type === 'file' || !props.type) ? <InboxOutlined /> : null\n                    }\n                    {\n                        props.type === 'video' ? <VideoCameraAddOutlined /> : null\n                    }\n                    {\n                        props.type === 'audio' ? <AudioOutlined /> : null\n                    }\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\n            </Upload.Dragger>\n        </>\n    )\n}\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Space, Steps, Tooltip } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { MinusCircleOutlined, PlusOutlined, QuestionCircleOutlined, SyncOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\nimport 'moment/locale/zh-cn';\nimport locale from 'antd/es/date-picker/locale/zh_CN';\nimport { useTranslation } from 'react-i18next';\nimport FileUploadPlus from '../FileUploadPlus/FileUploadPlus';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value?: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select' | 'fileUpload'\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n    const { t, i18n } = useTranslation();\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderFileUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus />\n        </Form.Item>\n    }\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n\n        let extraContent: any = null\n\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={<>\n                            {config.data.tips ? <Tooltip\n                                className=\"mr8\"\n                                placement=\"bottom\"\n                                title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                            >\n                                <div className=\"cp d-il\">\n                                    <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                                    <span className=\"pl4 c-theme\">{t('详情')}</span>\n                                </div>\n                            </Tooltip> : null}\n                            {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        </>}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <InputSearch\n                onClick={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                isOpenSearchMatch={true}\n                disabled={config.disable}\n                placeholder={`${t('请选择')}${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\n        </Form.Item>\n    }\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span className=\"pr4\" dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                {\n                    config.data.isRefresh ? <div className=\"cp d-il\" onClick={() => {\n                        props.onRetryInfoChange && props.onRetryInfoChange()\n                    }}>\n                        <SyncOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('刷新列表')}</span>\n                    </div> : null\n                }\n            </>}\n            {...itemProps}\n        >\n            <Select\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={config.placeHolder || `${t('请选择')}${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: t('请选择时间') }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: t('请选择时间范围') }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            case 'fileUpload':\n                return renderFileUpload(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                // <Space key={key} style={{ display: 'flex', marginBottom: 8 }}\n                                //     align='baseline'\n                                // >\n                                //     {\n                                //         item.list && item.list.map(listItem => {\n                                //             return dispatchRenderFormItem(listItem, {\n                                //                 ...restField,\n                                //                 name: [name, listItem.name],\n                                //                 // style: { flexDirection: 'column' }\n                                //             })\n                                //         })\n                                //     }\n                                //     {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                //     <Form.Item wrapperCol={{ offset: 5 }}>\n                                //         <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                //             删除该项\n                                //         </Button>\n                                //     </Form.Item>\n                                // </Space>\n                                <div key={key} className=\"bor b-side pt8 plr16 mb8 d-f\" style={{ alignItems: 'start', minWidth: 1600 }}>\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name],\n                                                labelAlign: 'left',\n                                                labelCol: 24,\n                                                style: { flexDirection: 'column', flex: 1, marginBottom: 8 },\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item >\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />} style={{ width: 120 }}>\n                                            {t('删除该项')}\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\" label=\"\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    {t('增加一项')}\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return <div style={{ width: 680 }}>\n                    {dispatchRenderFormItem(item)}\n                </div>\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                {t('上一步')}\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                {t('下一步')}\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">{t('点击确定完成提交')}</div>\n                            )}\n                        </div>\n                    </div>\n                </> : <div style={{ width: 680 }}>\n                    {\n                        renderFormItem(currentConfig || [])\n                    }\n                </div>\n            }\n        </>\n    )\n}\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination, Switch } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, actionADUGTemplateRetryInfo, actionADUGTemplateFavorite, actionADUGTemplateCancelFavorite, actionADUGTemplateChartOption } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig } from '../components/DynamicForm/DynamicForm';\nimport ChartOptionTempalte from './ChartOptionTempalte';\nimport { useTranslation } from 'react-i18next';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n    only_favorite?: boolean\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `${t('共')}${total}${t('条')}`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n\n    let customFormData: Record<string, string> = {}\n    try {\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\n    } catch (err) { }\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\n    const [list_ui_args, setList_ui_args] = useState<{\n        card_width: string\n        card_height: string\n    }>()\n    const [opsLink, setOpsLink] = useState<Array<{\n        text: string\n        url: string\n    }>>([])\n    const [listColumns, setListColumns] = useState<string[]>([])\n    const [isAllDataList, _setIsAllDataList] = useState(true)\n    const isAllDataListRef = useRef(isAllDataList);\n    const setIsAllDataList = (data: boolean): void => {\n        isAllDataListRef.current = data;\n        _setIsAllDataList(data);\n    };\n    const [isShowCollect, _setIsShowCollect] = useState(false)\n    const isShowCollectRef = useRef(isShowCollect);\n    const setIsShowCollect = (data: boolean): void => {\n        isShowCollectRef.current = data;\n        _setIsShowCollect(data);\n    };\n    const [isEchartShow, setIsEchartShow] = useState(false)\n    const [pageSize, setPageSize] = useState(PAGE_SIZE)\n    const [listTitle, setListTitle] = useState<string>()\n\n    const { t, i18n } = useTranslation();\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n\n    }, [pageSize])\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            if (type === 'file') {\n                type = 'fileUpload'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `${t('请选择')} ${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `${t('请输入')} ${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `${t('请按正确的规则输入')}` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `${t('请输入正确的长度')}` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n        setLoadingAdd(true)\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data,\n                list_ui_type,\n                list_ui_args,\n                ops_link,\n                enable_favorite,\n                echart,\n                page_size,\n                list_title\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: t('操作'),\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        isShowCollectRef.current && isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('收藏'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定收藏')}?`,\n                                                okText: t('确认收藏'),\n                                                cancelText: t('取消'),\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('收藏成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('收藏失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>{t('收藏')}</div></Menu.Item> : null\n                                    }\n                                    {\n                                        isShowCollectRef.current && !isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('取消收藏'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定取消收藏')}?`,\n                                                okText: t('确认取消收藏'),\n                                                cancelText: t('取消'),\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateCancelFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('操作成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('操作失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>{t('取消收藏')}</div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            {t('详情')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn(t('用户没有修改权限'))\n                                            })\n                                        }}>\n                                            {t('修改')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('删除'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定删除')}?`,\n                                                okText: t('确认删除'),\n                                                cancelText: t('取消'),\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('删除成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('删除失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            {t('删除')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: t('确认'),\n                                                    cancelText: t('取消'),\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve(res);\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject(err);\n                                                                });\n                                                        })\n                                                            .then((res: any) => {\n                                                                message.success(t('操作成功'));\n\n                                                                if (res.data.result.link) {\n                                                                    window.open(res.data.result.link, 'bank')\n                                                                }\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error(t('操作失败'));\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {t(`${action.text}`)}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">{t('更多')}<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            if (customFormData && Object.keys(customFormData).length) {\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\n                let reTryInfoFlag = reTryInfoQuene.length\n\n                const handleReTryInfo = (tar: string) => {\n                    reTryInfoFlag = reTryInfoFlag - 1;\n\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                            return {\n                                group: group.group,\n                                expanded: group.expanded,\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\n                            }\n                        })\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                        setDynamicFormDataAdd(formReset)\n                        setDynamicFormConfigAdd(formConfigAdd)\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n                        if (reTryInfoFlag) {\n                            const resTar = JSON.stringify(formReset)\n                            handleReTryInfo(resTar)\n                        }\n                    }).catch(err => {\n                        message.error(t('字段切换错误'))\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }\n\n                if (reTryInfoQuene.length) {\n                    const formRes = customFormData\n                    for (const key in formRes) {\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                            const value = formRes[key];\n                            if (value === undefined) {\n                                delete formRes[key]\n                            }\n                        }\n                    }\n                    const tar = JSON.stringify(formRes)\n\n                    handleReTryInfo(tar)\n                }\n            }\n\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            edit_columns.forEach((item) => {\n                if (item['ui-type'] === 'list') {\n                    item.info.forEach((itemInfo: any) => {\n                        updateColumnsMap[itemInfo.name] = itemInfo\n                    })\n                }\n            })\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error(t('filter解析异常'))\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setListTitle(list_title)\n            setPageSize(page_size)\n            setIsEchartShow(echart)\n            setIsShowCollect(enable_favorite)\n            setOpsLink(ops_link)\n            setListColumns(list_columns)\n            setList_ui_type(list_ui_type)\n            setList_ui_args(list_ui_args)\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n\n            fetchData({\n                pageConf: {\n                    ...pageInfoInit,\n                    pageSize: page_size\n                },\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n            setLoadingAdd(false)\n        })\n    }, []);\n\n    const formatFilterParams = (params: any[], paramsMap: Record<string, any>) => {\n        let formatData = undefined\n        const temlateId = getParam('id')\n\n        formatData = {\n            filters: [\n                temlateId ? {\n                    col: props?.model_name,\n                    opr: \"rel_o_m\",\n                    value: +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n\n                    return {\n                        col: param.key,\n                        opr: opr,\n                        value: param.value\n                    }\n                })\n            ].filter(item => !!item),\n        }\n        return formatData\n    }\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter,\n        only_favorite\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined,\n            only_favorite: false\n        }) => {\n        setLoading(true);\n\n        const form_data = JSON.stringify({\n            ...formatFilterParams(params, paramsMap),\n            only_favorite,\n            str_related: 1,\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: t('确认'),\n                cancelText: t('取消'),\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success(t('操作成功'));\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error(t('操作失败'));\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn(t('请先选择'))\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            const isXLS = file.name.indexOf('.xls') !== -1;\n            const isJson = file.name.indexOf('.json') !== -1;\n            const isXLSX = file.name.indexOf('.xlsx') !== -1;\n            if (isCSV || isJson || isXLS || isXLSX) {\n                return true\n            } else {\n                message.error(`文件格式支持CSV/JSON/XLS/XLSX`);\n            }\n        },\n        onChange(info) {\n            if (info.file.status === 'done') {\n                notification['success']({\n                    message: t('导入成功'),\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                notification['error']({\n                    message: t('导入失败'),\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in h100 d-f fd-c\">\n            {/* 添加 */}\n            <ModalForm\n                title={`${t('添加')} ${labelTitle}`}\n                // width={1000}\n                formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`${t('添加')} ${labelTitle} ${t('成功')}`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`${t('添加')} ${labelTitle} ${t('失败')}`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error(t('字段切换错误'))\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`${t('修改')} ${labelTitle}`}\n                // width={1500}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\n                        let value = next.value;\n                        value = moment(value)\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\n                        const value = (next.value || []).map((item: any) => {\n                            for (const listItemKey in item) {\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\n                                    const listItemValue = item[listItemKey];\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\n                                        item[listItemKey] = moment(listItemValue)\n                                    }\n                                }\n                            }\n                            return item\n                        })\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`${t('更新')} ${labelTitle} ${t('成功')}`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`${t('更新')} ${labelTitle} ${t('失败')}`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle} ${t('详情')}`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\n                                        __html: (() => {\n                                            let content = item.value\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\n                                                try {\n                                                    content = JSON.stringify(item.value)\n                                                } catch (error) { }\n                                            }\n                                            return content\n                                        })()\n                                    }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />{t('返回')}</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-icon-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>{t('帮助链接')}</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title h100 d-f fd-c\">\n                <div className=\"mlr16 mb16 flex1 bg-w\">\n                    {\n                        !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                            localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                            setFilterValues(values)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfoInit,\n                                params: values,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        }} />\n                    }\n\n                    {\n                        isEchartShow ? <ChartOptionTempalte url={baseUrl} /> : null\n                    }\n\n                    {\n                        list_ui_type !== 'card' ? <TableBox\n                            cancelExportData={true}\n                            tableKey={`tablebox_${location.pathname}`}\n                            titleNode={<Col className=\"tablebox-title\">\n                                <div className=\"d-f ac\">\n                                    <div className=\"mr8\">{listTitle || ''}</div>\n                                    {\n                                        isShowCollect ? <div className=\"pb2\">\n                                            <Switch checked={isAllDataList} checkedChildren={t('全部')} unCheckedChildren={t('我的收藏')} defaultChecked onChange={(checked) => {\n                                                setIsAllDataList(checked)\n                                                fetchData({\n                                                    ...fetchDataParams,\n                                                    pageConf: pageInfoInit,\n                                                    params: filterValues,\n                                                    sorter: sorterParam,\n                                                    paramsMap: filterParamsMap,\n                                                    only_favorite: !checked\n                                                });\n                                            }} />\n                                        </div> : null\n                                    }\n                                </div>\n                            </Col>}\n                            buttonNode={<div className=\"d-f ac\">\n                                {\n                                    opsLink && opsLink.length ? opsLink.map(config => {\n                                        return <Button type=\"primary\" className=\"mr16\" onClick={() => {\n                                            window.open(config.url, 'bank')\n                                        }}>{config.text}</Button>\n                                    }) : null\n                                }\n\n                                {\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>{t('添加')}{labelTitle}<PlusOutlined /></Button> : null\n                                }\n                                <div>\n                                    <Dropdown overlay={<Menu>\n                                        {\n                                            multipleAction.map((action, index) => {\n                                                return <Menu.Item key={`table_muliple_${index}`}>\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                        {`${t('批量')} ${action.text}`}\n                                                    </span>\n                                                </Menu.Item>\n                                            })\n                                        }\n\n                                    </Menu>}>\n                                        <Button>{t('批量操作')} <DownOutlined /></Button>\n                                    </Dropdown>\n                                </div>\n                                {\n                                    isImportData ? <div className=\"d-f ml16\">\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\"><div>{t('注意：csv逗号分隔')}，</div><div>{t('第一行为列的英文名')}</div> <div className=\"link\" onClick={() => {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                        }}>{(t('下载导入模板'))}</div></span>} placement=\"topLeft\">\n                                            <Upload {...uploadConfig}>\n                                                <Button className=\"\" icon={<UploadOutlined />}>{t('批量导入数据')}</Button>\n                                            </Upload>\n                                        </Tooltip>\n                                    </div> : null\n                                }\n                                {\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                        Modal.confirm({\n                                            title: t('导出数据'),\n                                            icon: <ExclamationCircleOutlined />,\n                                            content: '',\n                                            okText: t('确认导出数据'),\n                                            cancelText: t('取消'),\n                                            onOk() {\n                                                const formatData = formatFilterParams(filterValues, filterParamsMap)\n                                                const form_data = JSON.stringify(formatData)\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download?form_data=${form_data}`)\n                                                message.success(t('导出成功'));\n                                            },\n                                            onCancel() { },\n                                        });\n                                    }}>{t('批量导出')}  <ExportOutlined /></Button> : null\n                                }\n\n                            </div>}\n                            rowKey={(record: any) => {\n                                return JSON.stringify(record)\n                            }}\n                            columns={currentColumns}\n                            loading={loading}\n                            pagination={pageInfo}\n                            dataSource={dataList}\n                            onChange={(pageInfo: any, filters, sorter: any) => {\n                                const tarSorter = sorter.order ? {\n                                    order_column: sorter.columnKey,\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                                } as ISorterParam : undefined\n\n                                fetchData({\n                                    ...fetchDataParams,\n                                    pageConf: pageInfo,\n                                    params: filterValues,\n                                    paramsMap: filterParamsMap,\n                                    sorter: tarSorter\n                                });\n                            }}\n                            rowSelection={{\n                                type: 'checkbox',\n                                fixed: 'left',\n                                columnWidth: 32,\n                                selectedRowKeys,\n                                onChange: (selectedRowKeys) => {\n                                    setSelectedRowKeys(selectedRowKeys)\n                                }\n                            }}\n                            scroll={{ x: tableWidth, y: scrollY }}\n                        /> : <div className=\"bg-w p16\">\n                            <div className=\"d-f fw\">\n                                {\n                                    dataList.map((row, rowIndex) => {\n                                        return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\n                                            {\n                                                Object.keys(row).map((key, itemIndex) => {\n                                                    if (listColumns.includes(key)) {\n                                                        return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\n                                                    }\n                                                    return null\n                                                })\n                                            }\n                                        </div>\n                                    })\n                                }\n                            </div>\n                            <div className=\"ta-r\">\n                                <Pagination {...pageInfo} onChange={(page, pageSize) => {\n                                    fetchData({\n                                        ...fetchDataParams,\n                                        pageConf: {\n                                            ...pageInfo,\n                                            current: page,\n                                            pageSize\n                                        },\n                                        params: filterValues,\n                                        paramsMap: filterParamsMap,\n                                    });\n                                }} />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { actionADUGTemplateChartOption } from '../api/kubeflowApi'\nimport EchartCore, { ECOption } from '../components/EchartCore/EchartCore'\n\ninterface IProps {\n    url?: string\n}\n\nexport default function ChartOptionTempalte(props: IProps) {\n    const [option, setOption] = useState<ECOption>({})\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (props.url) {\n            actionADUGTemplateChartOption(`${props.url}echart`, {}).then(res => {\n                const option = res.data.result\n                var currentOps: any = {}\n                eval(`currentOps=${option}`)\n                setOption(currentOps)\n            }).catch(err => { }).finally(() => {\n                setLoading(false)\n            })\n        }\n    }, [props.url])\n\n    return (\n        <EchartCore option={option} loading={loading} />\n    )\n}\n"],"names":["defaultChartStyle","height","EchartCore","props","chartInstance","setChartInstance","useState","id","Math","random","toString","substring","t","i18n","useTranslation","option","useEffect","chartDom","document","getElementById","chart","echarts","setOption","data","_jsx","Spin","spinning","loading","children","_jsxs","className","style","isNoData","InputSearch","inputRef","dataCache","setDataCache","options","value","setValue","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","debounceScroll","fun","timer","time","arguments","undefined","_len","args","Array","_key","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","width","Input","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","concat","maxHeight","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","ResizableTitle","_ref","onResize","restProps","Resizable","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","dataFormat","setDataFormat","header","filterValue","setFilterValue","cols","setCols","columns","handleResize","_","_ref2","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","scroll","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","Space","direction","Modal","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","Checkbox","Group","label","defaultValue","bottom","Button","type","Tabs","TabPane","tab","text","onCopy","message","success","cursor","minHeight","titleNode","buttonNode","cancelExportData","Row","justify","align","Col","marginLeft","ConfigProvider","renderEmpty","customizeRenderEmpty","flexDirection","src","emptyImg","alt","Table","components","cell","pagination","rowSelection","Title","Typography","styles","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","form","Form","useForm","updateState","React","formData","setFieldsValue","formChangeRes","setFormChangeRes","currentChange","allValues","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","call","Option","Select","collapsed","setCollapsed","typeArr","setTypeArr","formatParamsData","indexKey","paramsData","setParamsData","params","currentParamsData","setCurrentParamsData","paramsDataMap","setParamsDataMap","Map","group","key","i","j","used","formatData","dataMap","param","set","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","async","tarVal","initialValues","gutter","marginRight","List","fields","add","remove","_Fragment","field","compact","Item","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","FileUploadPlus","visableChangePhone","setVisableChangePhone","fileLoading","setFileLoading","imgUrl","setImgUrl","imageList","setImageList","setLoading","fileList","setFileList","createMediaPreview","file","fileIndex","url","window","createObjectURL","URL","webkitURL","getObjectURL","currentFileList","splice","borderBottomLeftRadius","zIndex","color","controls","borderRadius","Upload","Dragger","showUploadList","customRequest","tarList","Promise","all","file2Bin","resolve","reject","replace","reader","FileReader","readAsDataURL","onload","result","beforeUpload","_props$format","maxCount","error","isFormatOk","format","isLt2M","maxSize","status","InboxOutlined","VideoCameraAddOutlined","AudioOutlined","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","currentConfig","_setCurrentConfig","config","currentConfigRef","useRef","setCurrentConfig","currentConfigGroup","_setCurrentConfigGroup","configGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","findOptionInLinkAge","configItem","dep","valueId","_props$form","effect","effectOption","_props$form2","setValueInConfig","tarConfig","setValueInConfigGroup","tarConfigGroup","configList","keys","_props$form3","formValues","entries","renderInput","itemProps","initialValue","extra","tips","Tooltip","placement","dangerouslySetInnerHTML","__html","QuestionCircleOutlined","description","disable","dispatchRenderFormItem","renderInputSelect","retry_info","onRetryInfoChange","renderTextArea","TextArea","autoSize","minRows","renderSelect","isRefresh","SyncOutlined","multiple","renderDatePicker","DatePicker","locale","showTime","disabledDate","moment","endOf","renderRangePicker","renderRadio","Radio","renderFileUpload","renderFormItem","list","_ref3","_ref4","restField","alignItems","minWidth","listItem","labelAlign","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Steps","Step","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","loadingAdd","setLoadingAdd","visableAdd","setVisableAdd","getParam","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","dynamicFormDataAdd","setDynamicFormDataAdd","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","setPrimaryKey","labelTitle","setLabelTitle","list_ui_type","setList_ui_type","list_ui_args","setList_ui_args","opsLink","setOpsLink","listColumns","setListColumns","isAllDataList","_setIsAllDataList","isAllDataListRef","isShowCollect","_setIsShowCollect","isShowCollectRef","isEchartShow","setIsEchartShow","setPageSize","listTitle","setListTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","getADUGTemplateApiInfo","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","ops_link","enable_favorite","echart","page_size","list_title","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","a","b","render","record","_cols_width$column$ty","tarRes","actionList","singleAction","single","tableAction","fixed","_props$related","Dropdown","overlay","Menu","confirm","ExclamationCircleOutlined","content","actionADUGTemplateFavorite","fetchData","actionADUGTemplateCancelFavorite","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","warn","okButtonProps","actionADUGTemplateDelete","confirmation","actionADUGTemplateSingle","link","open","tarColumns","addColumnsMap","reTryInfoQuene","reTryInfoFlag","handleReTryInfo","tar","actionADUGTemplateRetryInfo","exist_add_args","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","formRes","hasOwnProperty","itemInfo","tarFilter","oprList","operator","currentFilterValues","_ref5","localCacheFilter","search","urlFilter","localFilter","setBaseUrl","setLabelMap","currentTableWidth","formatFilterParams","temlateId","model_name","opr","sourceOprList","currentOpr","only_favorite","form_data","str_related","page","getADUGTemplateList","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","headers","authorization","isCSV","isXLS","isJson","isXLSX","notification","response","ModalForm","isArray","actionADUGTemplateAdd","tarIndex","listItemKey","listItemValue","actionADUGTemplateUpdate","whiteSpace","TitleHeader","isSubRoute","reload","RollbackOutlined","crumbs","idx","Content","MixSearch","ChartOptionTempalte","TableBox","Switch","checked","checkedChildren","unCheckedChildren","defaultChecked","actionADUGTemplateMuliple","ids","handleMultiRecord","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak","Pagination","actionADUGTemplateChartOption","currentOps","eval"],"sourceRoot":""}