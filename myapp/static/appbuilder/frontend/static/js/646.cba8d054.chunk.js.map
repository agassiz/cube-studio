{"version":3,"file":"static/js/646.cba8d054.chunk.js","mappings":"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","sources":["components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","api/dataSearchApi.ts","components/CodeEdit.tsx","pages/DataSearch/TaskList.tsx","pages/DataSearch/ConfigFormData.tsx","pages/DataSearch/DataSearch.tsx"],"sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\n// import ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst customizeRenderEmpty = () => (\n\t\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t\t<div>{t('暂无数据')}</div>\n\t\t</Row>\n\t);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== t('操作'));\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\t// const handleClickOutputExcel = () => {\n\t// \tconst option: any = {};\n\t// \toption.fileName = 'result';\n\t// \toption.datas = [\n\t// \t\t{\n\t// \t\t\tsheetData: dataFormat.data,\n\t// \t\t\tsheetName: 'sheet',\n\t// \t\t\tsheetHeader: dataFormat.header,\n\t// \t\t},\n\t// \t];\n\t// \tconst toExcel = new ExportJsonExcel(option);\n\t// \ttoExcel.saveExcel();\n\t// };\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={t('导出数据')}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">{t('选择需要导出的列')}：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('全选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('反选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t{/* <Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane> */}\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t{t('导出数据')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import { AxiosResponse } from 'axios'\nimport axios, { AxiosResFormat } from '.'\nimport { TTaskStatus } from '../pages/DataSearch/interface'\n\nexport const actionRun = (params: {\n    sql: string,\n    [key: string]: any\n}): Promise<AxiosResponse<{\n    err_msg: string\n    log_url: string\n    task_id: string\n    task_url: string\n}>> => {\n    return axios.post('/idex/submit_task', params)\n}\n\nexport const actionGetDataSearchRes = (task_id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n    state: TTaskStatus\n    task_url: string\n    result_url: string\n    stage: any\n    spark_log_url: string\n    spark_ui_url: string\n}>> => {\n    return axios.get(`/idex/look/${task_id}`,)\n}\n\nexport const getIdexDBList = (): Promise<AxiosResponse<{\n    dbs: string[]\n}>> => {\n    return axios.get(`/idex/get_user_db`)\n}\n\nexport const getIdexTableList = (table: string): Promise<AxiosResponse<{\n    tables: string[]\n}>> => {\n    return axios.get(`/idex/get_user_db_tables/${table}`)\n}\n\nexport const getIdexTaskDownloadUrl = (id: string, separator: string): Promise<AxiosResponse<{\n    download_url: string\n}>> => {\n    return axios.get(`/idex/download_url/${id}`, {\n        params: {\n            separator\n        }\n    })\n}\n\nexport const getIdexTaskResult = (id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n}>> => {\n    return axios.get(`/idex/result/${id}`)\n}\n\nexport const stopIndxTask = (id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n}>> => {\n    return axios.get(`/idex/stop/${id}`)\n}\n\n\nexport const getIndexResourceOverview = (group_id: string): Promise<AxiosResponse<{\n    err_msg: string\n    result: Array<Array<string | number>>\n}>> => {\n    return axios.get(`/idex/get_resource/${group_id}`)\n}\n\nexport interface IIdexFormConfigItem {\n    id: string,\n    label: string,\n    type: 'input' | 'select' | 'input-select',\n    value: IIdexFormConfigOption[]\n    defaultValue: string\n    multiple: boolean\n    disable: boolean\n    placeHolder: string\n}\n\nexport interface IIdexFormConfigOption {\n    label: string\n    value: string\n    relate: {\n        relateId: string\n        value: IIdexFormConfigOption[]\n    }\n}\n\nexport const getIdexFormConfig = (): Promise<AxiosResponse<{\n    result: IIdexFormConfigItem[]\n}>> => {\n    return axios.get(`/idex/config`)\n}","import React from 'react';\nimport CodeMirror, { ReactCodeMirrorProps } from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { zebraStripes } from '@uiw/codemirror-extensions-zebra-stripes';\nimport { sql } from '@codemirror/lang-sql';\n\ninterface IProps extends ReactCodeMirrorProps {\n\n}\n\nconst sqlLang = `CREATE TABLE dbo.EmployeePhoto\n(\n    EmployeeId INT NOT NULL PRIMARY KEY,\n    Photo VARBINARY(MAX) FILESTREAM NULL,\n    MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL\n                    UNIQUE DEFAULT NEWID()\n);\n\nGO\n\n/*\ntext_of_comment\n/* nested comment */\n*/\n\n-- line comment\n\nCREATE NONCLUSTERED INDEX IX_WorkOrder_ProductID\n    ON Production.WorkOrder(ProductID)\n    WITH (FILLFACTOR = 80,\n        PAD_INDEX = ON,\n        DROP_EXISTING = ON);\nGO\n\nWHILE (SELECT AVG(ListPrice) FROM Production.Product) < $300\nBEGIN\n   UPDATE Production.Product\n      SET ListPrice = ListPrice * 2\n   SELECT MAX(ListPrice) FROM Production.Product\n   IF (SELECT MAX(ListPrice) FROM Production.Product) > $500\n      BREAK\n   ELSE\n      CONTINUE\nEND\nPRINT 'Too much for the market to bear';\n\nMERGE INTO Sales.SalesReason AS [Target]\nUSING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))\n       AS [Source] ([NewName], NewReasonType)\nON [Target].[Name] = [Source].[NewName]\nWHEN MATCHED\nTHEN UPDATE SET ReasonType = [Source].NewReasonType\nWHEN NOT MATCHED BY TARGET\nTHEN INSERT ([Name], ReasonType) VALUES ([NewName], NewReasonType)\nOUTPUT $action INTO @SummaryOfChanges;\n\nSELECT ProductID, OrderQty, SUM(LineTotal) AS Total\nFROM Sales.SalesOrderDetail\nWHERE UnitPrice < $5.00\nGROUP BY ProductID, OrderQty\nORDER BY ProductID, OrderQty\nOPTION (HASH GROUP, FAST 10);\n`;\n\n// https://uiwjs.github.io/react-codemirror/\n// https://www.npmjs.com/package/@uiw/react-codemirror\n// https://github.com/uiwjs/react-codemirror\nexport default function CodeEdit(props: IProps) {\n  return (\n    <>\n      <CodeMirror\n        theme={bbedit}\n        value={props.value}\n        onChange={props.onChange}\n        extensions={[\n          sql(),\n          zebraStripes({\n            step: 2,\n            lightColor: '#fafafa',\n            darkColor: '#fafafa',\n          })]} />\n    </>\n  )\n}\n\n// import React, { useEffect, useState } from 'react';\n// import { Controlled as CodeMirror } from 'react-codemirror2';\n// // 主题\n// import 'codemirror/lib/codemirror.css';\n// import 'codemirror/theme/solarized.css';\n// // 代码模式\n// import 'codemirror/mode/sql/sql';\n// // 代码补全\n// import 'codemirror/addon/hint/show-hint.css'\n// import 'codemirror/addon/hint/sql-hint';\n// import 'codemirror/addon/hint/show-hint';\n// import 'codemirror/addon/edit/closebrackets';\n// import 'codemirror/addon/hint/anyword-hint.js';\n// //折叠代码\n// import 'codemirror/addon/fold/foldgutter.css';\n// import 'codemirror/addon/fold/foldcode.js';\n// import 'codemirror/addon/fold/foldgutter.js';\n// import 'codemirror/addon/fold/brace-fold.js';\n// import 'codemirror/addon/fold/comment-fold.js';\n// // 代码高亮\n// import 'codemirror/addon/selection/active-line';\n\n// interface IProps {\n//   value?: string;\n//   onChange?: (value: string) => void;\n//   onSelect?: (value: string) => void\n//   readonly?: boolean\n// }\n\n// // https://github.com/scniro/react-codemirror2\n// // https://xudany.github.io/codemirror/2020/07/21/CodeMirror%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD/\n// export default function CodeEdit(props: IProps) {\n//   const [instance, setInstance] = useState<any>(null);\n\n//   return (\n//     <>\n//       <CodeMirror\n//         editorDidMount={(editor) => {\n//           setInstance(editor);\n//         }}\n//         value={props.value || ''}\n//         options={{\n//           placeholder: '输入SQL进行查询',\n//           mode: 'sql',\n//           theme: 'solarized',\n//           lineNumbers: true,\n//           smartIndent: true,\n//           lineWrapping: true,\n//           styleActiveLine: true,\n//           foldGutter: true,\n//           matchBrackets: true, //括号匹配，光标旁边的括号都高亮显示\n//           autoCloseBrackets: true, //键入时将自动关闭()[]{}''\"\"\n//           gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\n//           extraKeys: { Ctrl: 'autocomplete' },\n//           hintOptions: {\n//             completeSingle: false,\n//             alignWithWord: true\n//           },\n//         }}\n//         onCursorActivity={(editor) => {\n//           // console.log(editor.getSelection())\n//           const value = editor.getSelection()\n//           props.onSelect && props.onSelect(value)\n//         }}\n//         onBeforeChange={(editor, data, value) => {\n//           if (!props.readonly) {\n//             if (data.origin !== 'complete') {\n//               editor.execCommand('autocomplete');\n//             }\n//             props.onChange && props.onChange(value);\n//           }\n//         }}\n//       // onChange={(editor, data, value) => {\n//       //   console.log(editor, data, value)\n//       //   props.onChange && props.onChange(value);\n//       // }}\n//       />\n//     </>\n//   );\n// }","import { CaretRightOutlined, CloseCircleOutlined, CloseOutlined, DeleteOutlined, DownloadOutlined, LoadingOutlined, QuestionCircleOutlined, RedoOutlined, StopOutlined } from '@ant-design/icons';\nimport { Button, Col, Collapse, message, Modal, Row, Select, Spin, Steps, Tooltip } from 'antd'\nimport React, { useRef, useState } from 'react'\nimport TableBox from '../../components/TableBox/TableBox';\nimport { TTaskStep, IEditorTaskItem, TTaskStatus } from './interface'\nimport './DataSearch.less';\nimport { getIdexTaskDownloadUrl, getIdexTaskResult, stopIndxTask } from '../../api/dataSearchApi';\nimport { useTranslation } from 'react-i18next';\n// import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\n\nexport interface ITaskListItem { }\n\ninterface IProps {\n    onDelete: (id: string) => void,\n    onRetry: (id: string) => void,\n    option: Record<string, IEditorTaskItem>\n}\n\nconst stepMap: Record<TTaskStep, number> = {\n    'start': 0,\n    'parse': 1,\n    'execute': 2,\n    'end': 3\n}\n\nconst statusIconMap = (status: TTaskStatus) => {\n    switch (status) {\n        case 'init':\n        case 'running':\n            return <LoadingOutlined />\n        case 'failure':\n            return <CloseCircleOutlined style={{ color: '#ff4444' }} />\n        case 'stop':\n            return <QuestionCircleOutlined />\n        default:\n            return null\n    }\n}\n\nexport default function TaskList(props: IProps) {\n    const { t, i18n } = useTranslation();\n    const [visibleDownload, setVisibleDownload] = useState(false)\n    const [visibleResult, setVisibleResult] = useState(false)\n    // const [dataConfig, setDataConfig] = useState<any>([])\n    // const [dataResult, setDataResult] = useState<Record<string, any>[]>([])\n    const [loadingResult, setLoadingResult] = useState(true)\n\n    // const [dataConfig, _setDataConfig] = useState<any>([])\n    // const dataConfigRef = useRef(dataConfig);\n    // const setDataConfig = (data: any): void => {\n    //     dataConfigRef.current = data;\n    //     _setDataConfig(data);\n    // };\n\n    // const [dataResult, _setDataResult] = useState<any>([])\n    // const dataResultRef = useRef(dataResult);\n    // const setDataResult = (data: any): void => {\n    //     dataResultRef.current = data;\n    //     _setDataResult(data);\n    // };\n\n    const [separator, _setSeparator] = useState<string>('|')\n    const separatorRef = useRef(separator);\n    const setSeparator = (data: string): void => {\n        separatorRef.current = data;\n        _setSeparator(data);\n    };\n\n    const [currentReqId, _setCurrentReqId] = useState<string>('|')\n    const currentReqIdRef = useRef(currentReqId);\n    const setCurrentReqId = (data: string): void => {\n        currentReqIdRef.current = data;\n        _setCurrentReqId(data);\n    };\n\n    const onChange = (key: string | string[]) => {\n        console.log(key);\n    };\n\n    const handleResultData = (result: (string | number)[][]) => {\n        const header = result[0] || []\n        const data = result.slice(1)\n        const targetData = data.map((row) => {\n            const rowItem = row.reduce((pre, next, index) => ({ ...pre, [header[index]]: next }), {})\n            return rowItem\n        })\n        const headerConfig = header.map(item => ({\n            title: item,\n            dataIndex: item,\n            key: item,\n            width: 120,\n        }))\n        // targetData.unshift(header)\n        // setDataConfig(headerConfig)\n        // setDataResult(targetData)\n\n        return {\n            config: headerConfig,\n            data: targetData\n        }\n    }\n\n    // const handleClickDownload = (id: any) => {\n    //     Modal.confirm({\n    //         title: '下载结果',\n    //         icon: <DownloadOutlined />,\n    //         content: <div>\n    //             <div className=\"d-f ac pt16\">\n    //                 <div className=\"w72\">分隔符：</div>\n    //                 {console.log('separatorRef.current', separatorRef.current, separator)}\n    //                 <Select style={{ width: 256 }} value={separatorRef.current} options={[{\n    //                     label: '|',\n    //                     value: '|'\n    //                 }, {\n    //                     label: ',',\n    //                     value: ','\n    //                 }, {\n    //                     label: 'tab',\n    //                     value: 'tab'\n    //                 }]} onChange={(value) => {\n\n    //                     // separatorRef.current = value\n    //                     setSeparator(value)\n    //                     _setSeparator(value)\n    //                     console.log(value, separatorRef.current);\n    //                 }} />\n    //             </div>\n    //         </div>,\n    //         okText: `确认`,\n    //         cancelText: '取消',\n    //         onOk() {\n    //             return new Promise((resolve, reject) => {\n    //                 getIdexTaskDownloadUrl(id).then(res => {\n    //                     window.open(res.data.download_url, 'bank')\n    //                     resolve('')\n    //                 }).catch(err => {\n    //                     reject()\n    //                 })\n    //             })\n    //                 .then((res) => {\n    //                     message.success('下载成功');\n    //                 })\n    //                 .catch(() => {\n    //                     message.error('下载失败');\n    //                 });\n    //         },\n    //         onCancel() { },\n    //     });\n    // }\n\n    return (\n        <div>\n            {/* <Modal\n                title={`下载结果`}\n                visible={visibleResult}\n                footer={null}\n                width={1248}\n                destroyOnClose\n                onCancel={() => {\n                    setVisibleResult(false)\n                }}>\n                <Spin spinning={loadingResult}>\n                    <Spreadsheet height={700} width={1200} dataSource={dataResult} />\n                </Spin>\n            </Modal> */}\n\n            <Modal\n                title={t('结果')}\n                visible={visibleDownload}\n                footer={null}\n                destroyOnClose\n                onCancel={() => {\n                    setSeparator('|')\n                    setVisibleDownload(false)\n                }}>\n                <div>\n                    <div className=\"d-f ac pt8\">\n                        <div className=\"w96\">{t('选择分隔符')}：</div>\n                        <Select style={{ width: 256 }} value={separatorRef.current} options={[{\n                            label: '|',\n                            value: '|'\n                        }, {\n                            label: ',',\n                            value: ','\n                        }, {\n                            label: 'TAB',\n                            value: 'TAB'\n                        }]} onChange={(value) => {\n                            setSeparator(value)\n                        }} />\n                    </div>\n                    <div className=\"ta-r pt16\">\n                        <Button type=\"primary\" onClick={() => {\n                            getIdexTaskDownloadUrl(currentReqIdRef.current, separatorRef.current).then(res => {\n                                window.open(res.data.download_url, 'bank')\n                            }).catch(err => {\n                                console.log(err)\n                            })\n                        }}>{t('下载')}</Button>\n                    </div>\n                </div>\n            </Modal>\n            <Collapse className=\"site-collapse-custom-collapse\" defaultActiveKey={['task_0']} onChange={onChange}>\n                {\n                    (Object.entries(props.option).reduce((pre: IEditorTaskItem[], [key, value]) => ([...pre, value]), []) || []).reverse().filter(item => !!item.reqId).map((item, index) => {\n                        return (\n                            <Collapse.Panel className={['site-collapse-custom-panel', `status-${item.status}`].join(' ')} header={`${t('子任务')}${item.reqId}`} key={`task_${index}`} extra={\n                                <>\n                                    <Button className=\"mr16\" type=\"default\" size='small' onClick={(e) => {\n                                        e.stopPropagation();\n                                        props.onDelete(item.reqId)\n                                    }}>{t('删除')}<DeleteOutlined /></Button>\n                                    <Button type=\"primary\" size='small' onClick={(e) => {\n                                        e.stopPropagation();\n                                        props.onRetry(item.reqId)\n                                    }}\n                                    >{t('重试')}<RedoOutlined /></Button>\n                                </>\n                            }>\n                                <Steps size=\"small\" current={stepMap[item.step]}>\n                                    <Steps.Step title={t('准备开始')} icon={stepMap[item.step] === 0 ? statusIconMap(item.status) : null} />\n                                    <Steps.Step title={t('解析')} icon={stepMap[item.step] === 1 ? statusIconMap(item.status) : null} />\n                                    <Steps.Step title={t('执行')} icon={stepMap[item.step] === 2 ? statusIconMap(item.status) : null} />\n                                    <Steps.Step title={t('输出结果')} icon={stepMap[item.step] === 3 ? statusIconMap(item.status) : null} />\n                                </Steps>\n                                <TableBox\n                                    size={\"small\"}\n                                    loading={false}\n                                    cancelExportData={true}\n                                    rowKey={(record: any) => {\n                                        return JSON.stringify(record)\n                                    }}\n                                    columns={[{\n                                        title: t('子任务'),\n                                        dataIndex: 'content',\n                                        key: 'content',\n                                        render: (text: any) => {\n                                            return <Tooltip\n                                                placement=\"top\"\n                                                title={text}\n                                            >\n                                                <div className=\"ellip1 w256\">{text}</div>\n                                            </Tooltip>\n                                        }\n                                    },\n                                    // {\n                                    //     title: '数据库',\n                                    //     dataIndex: 'database',\n                                    //     key: 'database',\n                                    // }, {\n                                    //     title: '表',\n                                    //     dataIndex: 'table',\n                                    //     key: 'table',\n                                    // },\n                                    {\n                                        title: t('开始时间'),\n                                        dataIndex: 'startime',\n                                        key: 'startime',\n                                    }, {\n                                        title: t('运行时长'),\n                                        dataIndex: 'duration',\n                                        key: 'duration',\n                                    }, {\n                                        title: t('状态'),\n                                        dataIndex: 'status',\n                                        key: 'status',\n                                        render: (text: any) => {\n                                            return <span className={[`c-${item.status}`].join(' ')}>{text}</span>\n                                        }\n                                    }, {\n                                        title: t('操作'),\n                                        dataIndex: 'action',\n                                        key: 'action',\n                                        render: () => {\n                                            return <>\n                                                <span className=\"link mr16\" onClick={() => {\n                                                    // setVisibleDetail(true)\n                                                    Modal.info({\n                                                        title: t('任务详情'),\n                                                        width: 600,\n                                                        okText: t('关闭'),\n                                                        content: (\n                                                            <div>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('开始时间')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.startTime}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('运行时长')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.duration}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('状态')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.status}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('子任务内容')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.content}</Col>\n                                                                </Row>\n                                                                <Row className=\"mb16\">\n                                                                    <Col span={6}><div className=\"ta-r\"><strong>{t('任务信息')}：</strong></div></Col>\n                                                                    <Col span={18}>{item.message}</Col>\n                                                                </Row>\n                                                            </div>\n                                                        ),\n                                                        onOk() { },\n                                                    });\n                                                }}>{t('详情')}</span>\n                                                {\n                                                    !(item.step === 'end' && item.status === 'success') ? <span className=\"link mr16\" onClick={() => {\n                                                        Modal.confirm({\n                                                            title: t('终止任务'),\n                                                            icon: <StopOutlined />,\n                                                            content: '',\n                                                            okText: t('确认'),\n                                                            cancelText: t('取消'),\n                                                            onOk() {\n                                                                return new Promise((resolve, reject) => {\n                                                                    stopIndxTask(item.reqId).then(res => {\n                                                                        resolve('')\n                                                                    }).catch(err => {\n                                                                        reject()\n                                                                    })\n                                                                })\n                                                                    .then((res) => {\n                                                                        message.success(t('终止成功'));\n                                                                    })\n                                                                    .catch(() => {\n                                                                        message.error(t('终止失败'));\n                                                                    });\n                                                            },\n                                                            onCancel() { },\n                                                        });\n                                                    }}>{t('终止')}</span> : null\n                                                }\n                                                {\n                                                    !!item.log ? <span className=\"link mr16\" onClick={() => {\n                                                        window.open(item.log, 'bank')\n                                                    }}>{t('日志')}</span> : null\n                                                }\n                                                {\n                                                    item.step === 'end' && item.status === 'success' ? <span className=\"link mr16\" onClick={() => {\n                                                        setLoadingResult(true)\n                                                        getIdexTaskResult(item.reqId).then(res => {\n                                                            setVisibleResult(true)\n                                                            const result = res.data.result\n                                                            handleResultData(result)\n                                                            const handleData = handleResultData(result)\n                                                            // setDataResult(handleData)\n                                                            Modal.info({\n                                                                title: t('结果查看'),\n                                                                content: (\n                                                                    <div>\n                                                                        {/* {(result || [])?.map(item => {\n                                                                            return <div>{item}</div>\n                                                                        })} */}\n                                                                        <TableBox\n\n                                                                            size={\"small\"}\n                                                                            loading={false}\n                                                                            cancelExportData={true}\n                                                                            rowKey={(record: any) => {\n                                                                                return JSON.stringify(record)\n                                                                            }}\n                                                                            columns={handleData.config}\n                                                                            pagination={false}\n                                                                            dataSource={handleData.data}\n                                                                            scroll={{ x: 'auto' }}\n                                                                        />\n                                                                    </div>\n                                                                ),\n                                                                onOk() { },\n                                                            });\n                                                        }).catch(err => { }).finally(() => {\n                                                            setLoadingResult(false)\n                                                        })\n                                                    }}>{t('结果')}</span> : null\n                                                }\n                                                {\n                                                    item.step === 'end' && item.status === 'success' ? <span className=\"link\" onClick={() => {\n                                                        // handleClickDownload(item.reqId)\n                                                        setCurrentReqId(item.reqId)\n                                                        setVisibleDownload(true)\n                                                    }}>{t('下载')}</span> : null\n                                                }\n                                            </>\n                                        }\n                                    }]}\n                                    pagination={false}\n                                    dataSource={[{\n                                        content: item.content,\n                                        database: item.database || '-',\n                                        table: item.table || '-',\n                                        startime: item.startTime,\n                                        duration: item.duration || '-',\n                                        status: item.status\n                                    }]}\n                                />\n                            </Collapse.Panel>\n                        )\n                    })\n                }\n\n                {/* <Collapse.Panel className=\"site-collapse-custom-panel status-error\" header=\"子任务2\" key=\"2\" >\n                    <Steps size=\"small\" current={1}>\n                        <Steps.Step title=\"准备开始\" />\n                        <Steps.Step title=\"解析中\" icon={<LoadingOutlined />} />\n                        <Steps.Step title=\"执行中\" />\n                        <Steps.Step title=\"输出结果\" />\n                    </Steps>\n                    <TableBox\n                        size={\"small\"}\n                        loading={false}\n                        cancelExportData={true}\n                        rowKey={(record: any) => {\n                            return JSON.stringify(record)\n                        }}\n                        columns={[{\n                            title: '子任务',\n                            dataIndex: 'task',\n                            key: 'task',\n                        }, {\n                            title: '开始时间',\n                            dataIndex: 'startime',\n                            key: 'startime',\n                        }, {\n                            title: '运行时长',\n                            dataIndex: 'time',\n                            key: 'time',\n                        }, {\n                            title: '状态',\n                            dataIndex: 'status',\n                            key: 'status',\n                        }, {\n                            title: '操作',\n                            dataIndex: 'action',\n                            key: 'action',\n                            render: () => {\n                                return <>\n                                    <span className=\"link mr16\">详情</span>\n                                    <span className=\"link mr16\">日志</span>\n                                    <span className=\"link\">结果</span>\n                                </>\n                            }\n                        }]}\n                        pagination={false}\n                        dataSource={[{\n                            task: 'test',\n                            startime: '2022-08-09 17:45:46',\n                            time: '3分钟43秒',\n                            status: 'error'\n                        }]}\n                    />\n                </Collapse.Panel>\n                <Collapse.Panel className=\"site-collapse-custom-panel status-running\" header=\"子任务3\" key=\"3\">\n                    <p>{345}</p>\n                </Collapse.Panel> */}\n            </Collapse>\n        </div>\n    )\n}\n","import { Form } from 'antd'\nimport Select, { LabeledValue } from 'antd/lib/select';\nimport React, { useEffect, useImperativeHandle, useState } from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { IIdexFormConfigItem } from '../../api/dataSearchApi'\nimport InputSearch from '../../components/InputSearch/InputSearch';\nimport './ConfigFormData.less';\n\nexport type TDataValue = Record<any, any>\n\nexport interface IConfigFormDataOptionItem extends IIdexFormConfigItem { }\n\nexport interface IProps {\n    dataValue?: TDataValue\n    option: IConfigFormDataOptionItem[]\n    onChange: (dataValue: TDataValue) => void\n    onConfigChange?: (config: IConfigFormDataOptionItem[]) => void\n}\n\nconst ConfigFormData = React.forwardRef((props: IProps, ref) => {\n    const { t, i18n } = useTranslation();\n    const [form] = Form.useForm();\n    const [, updateState] = useState<any>();\n\n    useImperativeHandle(ref, () => ({\n        onSubmit: () => {\n            return new Promise((resolve, reject) => {\n                form.validateFields().then(res => {\n                    resolve(res)\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        },\n        setData: (data: Record<any, any>) => {\n            form.setFieldsValue(data)\n        }\n    }));\n\n    useEffect(() => {\n        if (props.dataValue) {\n            form.setFieldsValue(props.dataValue)\n        }\n    }, [props.option])\n\n    const renderInput = (config: IConfigFormDataOptionItem, itemProps: Record<string, any>) => {\n        return <div></div>\n    }\n\n    const renderSelect = (config: IConfigFormDataOptionItem, itemProps: Record<string, any>) => {\n        const options: LabeledValue[] = config.value || []\n        return <Form.Item\n            key={`configFormData_${config.id}`}\n            label={config.label}\n            name={config.id}\n            rules={[\n                {\n                    required: true,\n                    message: `${t('请选择')}${config.label}`,\n                },\n            ]}\n            initialValue={config.defaultValue}\n            style={{ marginBottom: 0, marginRight: 16 }}\n            {...itemProps}\n        >\n            <Select\n                style={{ width: 200 }}\n                mode={config.multiple ? 'multiple' : undefined}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={config.placeHolder || `${t('请选择')} ${config.label}`}\n                options={options}\n                onChange={(value, rowOption: any) => {\n                    if (rowOption.relate) {\n                        const relateId = rowOption.relate.relateId\n                        const relateOption = rowOption.relate.value\n                        const currentOption = props.option\n                        for (let i = 0; i < currentOption.length; i++) {\n                            const item = currentOption[i];\n                            if (item.id === relateId) {\n                                item.value = relateOption\n                            }\n                        }\n                        props.onConfigChange && props.onConfigChange(currentOption)\n                    }\n                    props.onChange && props.onChange(form.getFieldsValue())\n                }} />\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IConfigFormDataOptionItem, itemProps: Record<string, any>) => {\n        const options: LabeledValue[] = config.value || []\n        const inputSelectOption = options.map(item => (item.value)) as string[]\n        return <Form.Item\n            key={`configFormData_${config.id}`}\n            label={config.label}\n            name={config.id}\n            rules={[\n                {\n                    required: true,\n                    message: `${t('请选择')}${config.label}`,\n                },\n            ]}\n            initialValue={config.defaultValue}\n            style={{ marginBottom: 0 }}\n            {...itemProps}\n        >\n            <InputSearch\n                isOpenSearchMatch\n                onChange={() => {\n                    props.onChange && props.onChange(form.getFieldsValue())\n                }}\n                options={inputSelectOption} width={'500px'} />\n        </Form.Item>\n    }\n\n\n    const dispatchRenderFormItem = (item: IConfigFormDataOptionItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    return (\n        <div className=\"configformdata-container d-f ac\">\n            <Form form={form} component={false}>\n                {\n                    console.log('props.option', props.option)\n                }\n                {\n                    props.option.map((component) => {\n                        return dispatchRenderFormItem(component)\n                    })\n                }\n            </Form>\n        </div>\n    )\n})\n\nexport default ConfigFormData\n","import Icon, { ExclamationCircleOutlined, MenuOutlined, ReloadOutlined, RightCircleOutlined, SaveOutlined, SlidersOutlined, StarOutlined, StopOutlined } from '@ant-design/icons';\nimport { Button, Drawer, message, Modal, Select, Switch, Tabs, Tooltip } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { actionGetDataSearchRes, actionRun, getIdexFormConfig } from '../../api/dataSearchApi';\nimport CodeEdit from '../../components/CodeEdit'\nimport InputSearch from '../../components/InputSearch/InputSearch';\nimport Draggable from 'react-draggable';\nimport './DataSearch.less';\nimport TaskList from './TaskList';\nimport { IEditorTaskItem, IEditorStore, IEditorItem, IEditorItemParams } from './interface';\nimport moment from 'moment'\nimport { data2Time } from '../../util';\n// import LineChartTemplate from '../../components/LineChartTemplate/LineChartTemplate';\nimport LoadingStar from '../../components/LoadingStar/LoadingStar';\nimport cookies from 'js-cookie';\nimport ConfigFormData, { IConfigFormDataOptionItem } from './ConfigFormData';\nimport { useTranslation } from 'react-i18next';\nconst userName = cookies.get('myapp_username')\n\nconst createId = () => {\n    return Math.random().toString(36).substring(2)\n}\n\nconst sqlMap: Record<string, string> = {\n    'test': `CREATE TABLE dbo.EmployeePhoto\n    (\n        EmployeeId INT NOT NULL PRIMARY KEY,\n        Photo VARBINARY(MAX) FILESTREAM NULL,\n        MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL\n                        UNIQUE DEFAULT NEWID()\n    );\n    \n    GO\n    \n    /*\n    text_of_comment\n    /* nested comment */\n    */\n    \n    -- line comment\n    \n    CREATE NONCLUSTERED INDEX IX_WorkOrder_ProductID\n        ON Production.WorkOrder(ProductID)\n        WITH (FILLFACTOR = 80,\n            PAD_INDEX = ON,\n            DROP_EXISTING = ON);\n    GO\n    \n    WHILE (SELECT AVG(ListPrice) FROM Production.Product) < $300\n    BEGIN\n       UPDATE Production.Product\n          SET ListPrice = ListPrice * 2\n       SELECT MAX(ListPrice) FROM Production.Product\n       IF (SELECT MAX(ListPrice) FROM Production.Product) > $500\n          BREAK\n       ELSE\n          CONTINUE\n    END\n    PRINT 'Too much for the market to bear';\n    \n    MERGE INTO Sales.SalesReason AS [Target]\n    USING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))\n           AS [Source] ([NewName], NewReasonType)\n    ON [Target].[Name] = [Source].[NewName]\n    WHEN MATCHED\n    THEN UPDATE SET ReasonType = [Source].NewReasonType\n    WHEN NOT MATCHED BY TARGET\n    THEN INSERT ([Name], ReasonType) VALUES ([NewName], NewReasonType)\n    OUTPUT $action INTO @SummaryOfChanges;\n    \n    SELECT ProductID, OrderQty, SUM(LineTotal) AS Total\n    FROM Sales.SalesOrderDetail\n    WHERE UnitPrice < $5.00\n    GROUP BY ProductID, OrderQty\n    ORDER BY ProductID, OrderQty\n    OPTION (HASH GROUP, FAST 10);    \n`,\n}\n\nexport default function DataSearch() {\n    const { t, i18n } = useTranslation();\n    const initId = createId()\n    const initCurrentEditorData: IEditorItem = {\n        tabId: initId,\n        title: `${t('新查询')} 1`,\n        status: 'init',\n        smartShow: false,\n        smartContent: '',\n        smartCache: '',\n        smartTimer: undefined,\n        loading: false,\n        taskMap: {}\n    }\n    const initEditorData: Record<string, IEditorItem> = JSON.parse(localStorage.getItem('dataSearch2') || JSON.stringify({\n        [initCurrentEditorData.tabId]: initCurrentEditorData\n    }))\n    const initEditorDataList = Object.entries(initEditorData).reduce((pre: IEditorItem[], [key, value]) => ([...pre, { ...value }]), [])\n\n    const [activeKey, _setActiveKey] = useState<string>(initEditorDataList[0].tabId)\n    const activeKeyRef = useRef(activeKey);\n    const setActiveKey = (data: string): void => {\n        activeKeyRef.current = data;\n        _setActiveKey(data);\n    };\n\n    const [editorStore, _seteditorStore] = useState<IEditorStore>(initEditorData)\n    const editorStoreRef = useRef(editorStore);\n    const seteditorStore = (data: IEditorStore): void => {\n        editorStoreRef.current = data;\n        _seteditorStore(data);\n    };\n\n    const [configOption, _setConfigOption] = useState<IConfigFormDataOptionItem[]>([])\n    const configOptionRef = useRef(configOption);\n    const setConfigOption = (data: IConfigFormDataOptionItem[]): void => {\n        configOptionRef.current = data;\n        _setConfigOption(data);\n    };\n\n    const initialPanes = Object.entries(editorStore).reduce((pre: IEditorItem[], [key, value]) => ([...pre, { ...value }]), [])\n    const [panes, setPanes] = useState(initialPanes);\n    const newTabIndex = useRef(initEditorDataList.length);\n\n    const [columnConfig, setColumnConfig] = useState<any[]>([])\n    const [dataList, setDataList] = useState<any[]>([])\n\n    const configDataComponentRefs: any = useRef(null);\n\n    const setEditorState = (currentState: IEditorItemParams, key?: string) => {\n\n        const targetRes: IEditorStore = {\n            ...editorStoreRef.current\n        }\n        let currentTaskMap = {}\n\n        if (currentState.taskMap) {\n            currentTaskMap = {\n                taskMap: {\n                    ...editorStoreRef.current[activeKey].taskMap,\n                    ...currentState.taskMap\n                }\n            }\n        }\n\n        targetRes[key || activeKey] = {\n            ...targetRes[key || activeKey],\n            ...currentState,\n            ...currentTaskMap\n        }\n\n        localStorage.setItem('dataSearch2', JSON.stringify(targetRes))\n        editorStoreRef.current = targetRes\n        seteditorStore(targetRes)\n    }\n\n    useEffect(() => {\n        getIdexFormConfig().then(res => {\n            const option = res.data.result\n            setConfigOption(option)\n        })\n    }, [])\n\n    useEffect(() => {\n        const targetDom = document.getElementById(\"buttonDrag\")\n        if (targetDom) {\n            drag(targetDom);\n        }\n\n        function drag(obj: any) {\n            obj.onmousedown = function (e: any) {\n                var dir = \"\";  //设置好方向\n                var firstX = e.clientX;  //获取第一次点击的横坐标\n                var firstY = e.clientY;   //获取第一次点击的纵坐标\n                var width = obj.offsetWidth;  //获取到元素的宽度\n                var height = obj.offsetHeight;  //获取到元素的高度\n                var Left = obj.offsetLeft;   //获取到距离左边的距离\n                var Top = obj.offsetTop;   //获取到距离上边的距离\n                //下一步判断方向距离左边的距离+元素的宽度减去自己设定的宽度，只要点击的时候大于在这个区间，他就算右边\n                if (firstX > Left + width - 30) {\n                    dir = \"right\";\n                } else if (firstX < Left + 30) {\n                    dir = \"left\";\n                }\n                if (firstY > Top + height - 30) {\n                    dir = \"down\";\n                } else if (firstY < Top + 30) {\n                    dir = \"top\";\n                }\n                //判断方向结束\n                document.onmousemove = function (e) {\n                    switch (dir) {\n                        case \"right\":\n                            obj.style[\"width\"] = width + (e.clientX - firstX) + \"px\";\n                            break;\n                        case \"left\":\n                            obj.style[\"width\"] = width - (e.clientX - firstX) + \"px\";\n                            obj.style[\"left\"] = Left + (e.clientX - firstX) + \"px\";\n                            break;\n                        case \"top\":\n                            obj.style[\"height\"] = height - (e.clientY - firstY) + \"px\";\n                            obj.style[\"top\"] = Top + (e.clientY - firstY) + \"px\";\n                            break;\n                        case \"down\":\n                            obj.style[\"height\"] = height + (e.clientY - firstY) + \"px\";\n                            break;\n                    }\n                }\n                obj.onmouseup = function () {\n                    document.onmousemove = null;\n                }\n                return false;\n            }\n        }\n    }, [])\n\n    const clearEditorTaskTimerByKey = (activeKey: string) => {\n        const tagList = Object.entries(editorStoreRef.current[activeKey]).reduce((pre: IEditorItem[], [key, value]) => ([...pre, { ...value }]), [])\n        tagList.forEach(tag => {\n            clearInterval(tag.smartTimer)\n        })\n        const currentTaskList = Object.entries(editorStoreRef.current[activeKey].taskMap).reduce((pre: IEditorTaskItem[], [key, value]) => ([...pre, { ...value }]), [])\n        currentTaskList.forEach(task => {\n            clearInterval(task.timer)\n        })\n    }\n\n    const clearTaskTimer = (activeKey: string, taskId: string) => {\n        const taskMap = editorStoreRef.current[activeKey].taskMap\n        const task = taskMap[taskId]\n        if (task) {\n            clearInterval(task.timer)\n        }\n    }\n\n    // 清空定时器\n    useEffect(() => {\n        setEditorState({\n            loading: false\n        })\n\n        return () => {\n            Object.entries(editorStore).forEach((item) => {\n                const [key] = item\n                clearEditorTaskTimerByKey(key)\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        // 当前tab状态是runing，触发轮询\n        const currentEditorStore = editorStore[activeKey]\n        const currentTaskList = Object.entries(currentEditorStore.taskMap).reduce((pre: IEditorTaskItem[], [key, value]) => ([...pre, { ...value }]), [])\n        currentTaskList.forEach(task => {\n            if (task.status === 'running') {\n                pollGetRes(task.reqId)\n            }\n        })\n    }, [activeKey])\n\n\n    const onChange = (newActiveKey: string) => {\n        Object.entries(editorStore).forEach((item) => {\n            const [key] = item\n            if (key !== newActiveKey) {\n                clearEditorTaskTimerByKey(key)\n            }\n        })\n        setColumnConfig([])\n        setDataList([])\n        setActiveKey(newActiveKey);\n    };\n\n    const add = () => {\n        clearEditorTaskTimerByKey(activeKey)\n\n        const currentIndex = ++newTabIndex.current\n        if (currentIndex > 10) {\n            message.warn(t('标签数目达到限制'))\n        } else {\n            const newActiveKey = createId();\n            const title = `${t('新查询')} ${currentIndex}`\n            const newPanes = [...panes];\n            const initState: IEditorItem = {\n                title,\n                tabId: newActiveKey,\n                status: 'init',\n                smartShow: false,\n                smartContent: '',\n                smartTimer: undefined,\n                smartCache: '',\n                loading: false,\n                taskMap: {}\n            }\n            newPanes.push(initState);\n            setPanes(newPanes);\n            setActiveKey(newActiveKey);\n\n            let res: IEditorStore = {\n                ...editorStore, [newActiveKey]: initState\n            }\n\n            seteditorStore(res)\n            localStorage.setItem('dataSearch2', JSON.stringify(res))\n        }\n    };\n\n    const remove = (targetKey: string) => {\n        let newActiveKey = activeKey;\n        let lastIndex = -1;\n        panes.forEach((pane, i) => {\n            if (pane.tabId === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const newPanes = panes.filter(pane => pane.tabId !== targetKey);\n        if (newPanes.length && newActiveKey === targetKey) {\n            if (lastIndex >= 0) {\n                newActiveKey = newPanes[lastIndex].tabId;\n            } else {\n                newActiveKey = newPanes[0].tabId;\n            }\n        }\n        setPanes(newPanes);\n        setActiveKey(newActiveKey);\n\n        let res = { ...editorStore }\n        delete res[targetKey]\n        seteditorStore(res)\n        localStorage.setItem('dataSearch2', JSON.stringify(res))\n    };\n\n    const onEdit = (targetKey: any, action: 'add' | 'remove') => {\n        if (action === 'add') {\n            add();\n        } else {\n            remove(targetKey);\n        }\n    };\n\n    const fetchData = (task_id: string) => {\n        actionGetDataSearchRes(task_id).then(res => {\n            const { state, result, err_msg, result_url, spark_log_url, stage } = res.data\n            const task: IEditorTaskItem = {\n                ...editorStoreRef.current[activeKey].taskMap[task_id],\n                status: state,\n                step: stage,\n                log: spark_log_url,\n                downloadUrl: result_url,\n                result,\n                message: err_msg\n            }\n            if (state === 'success' || state === 'failure') {\n                const starTime = new Date(task.startTime || '').valueOf()\n                const nowTime = new Date().valueOf()\n                const duration = data2Time((nowTime - starTime) / 1000)\n                task.duration = duration\n\n                setEditorState({\n                    status: 'success',\n                    taskMap: {\n                        [task_id]: task\n                    }\n                })\n                clearTaskTimer(activeKey, task_id)\n            } else {\n                setEditorState({\n                    status: 'success',\n                    taskMap: {\n                        [task_id]: task\n                    }\n                })\n            }\n        }).catch(() => {\n            clearTaskTimer(activeKey, task_id)\n            message.error(t('查询结果失败，尝试重新运行'))\n            setEditorState({\n                status: 'failure',\n                taskMap: {\n                    [task_id]: {\n                        ...editorStoreRef.current[activeKey].taskMap[task_id],\n                        status: 'failure',\n                        step: 'end',\n                    }\n                }\n            })\n        })\n    }\n\n    const pollGetRes = (task_id: string) => {\n        clearTaskTimer(activeKey, task_id)\n\n        let timer = setInterval(() => {\n            fetchData(task_id)\n        }, 5000)\n\n        setEditorState({\n            taskMap: {\n                [task_id]: {\n                    reqId: task_id,\n                    status: 'init',\n                    content: editorStore[activeKey].content,\n                    name: `${t('任务')}${task_id}`,\n                    step: 'start',\n                    startTime: moment().format('YYYY-MM-DD HH:mm:ss'),\n                    database: editorStore[activeKey].database,\n                    table: editorStore[activeKey].table,\n                    timer,\n                    message: ''\n                }\n            }\n        })\n        fetchData(task_id)\n    }\n\n    const runTask = () => {\n        setEditorState({ status: 'running' })\n        const customParams = configOption.map(item => item.id).reduce((pre: any, next: any) => ({ ...pre, [next]: editorStore[activeKey][next] }), {})\n        // 运行子任务\n        actionRun({\n            sql: editorStore[activeKey]?.content || '',\n            ...customParams\n        }).then(res => {\n            const { err_msg, task_id } = res.data\n            if (err_msg) {\n                setEditorState({\n                    status: 'failure',\n                })\n                Modal.error({\n                    title: t('运行失败'),\n                    icon: <ExclamationCircleOutlined />,\n                    width: 1000,\n                    content: err_msg,\n                    okText: t('关闭'),\n                    // maskClosable: true\n                });\n            } else if (task_id) {\n                pollGetRes(task_id)\n            }\n        }).catch(err => {\n            setEditorState({ status: 'failure' })\n        })\n    }\n\n    return (\n        <div className=\"datasearch-container fade-in d-f\">\n            <div className=\"flex1 ptb16 pl16\">\n                <Tabs type=\"editable-card\" onChange={onChange} activeKey={activeKey} onEdit={onEdit}>\n                    {panes.map((pane, index) => (\n                        <Tabs.TabPane tab={`${t('新查询')} ${index + 1}`} key={pane.tabId} closable={index !== 0}>\n                            <div className=\"d-f fd-c h100\">\n                                <div className=\"flex2 s0 ov-a\">\n                                    {\n                                        editorStore[activeKey]?.loading ? <div className=\"codeedit-mark\">\n                                            <div className=\"d-f jc ac fd-c\">\n                                                <LoadingStar />\n                                                <div>\n                                                    {t('结果生成中')}\n                                                </div>\n                                            </div>\n                                        </div> : null\n                                    }\n\n                                    <CodeEdit\n                                        value={editorStore[activeKey]?.content}\n                                        onChange={(value: any) => {\n                                            setEditorState({\n                                                content: value === '' ? undefined : value,\n                                                title: pane.title,\n                                            })\n                                        }} />\n                                </div>\n\n                                <div className=\"ov-h\" id=\"showBox\" style={{ height: 500 }}>\n                                    <Draggable\n                                        axis=\"y\"\n                                        onStart={() => { }}\n                                        onDrag={(e: any) => {\n                                            const showBoxDom = document.getElementById('showBox')\n                                            if (showBoxDom) {\n                                                const res = document.body.clientHeight - e.y\n                                                showBoxDom.style.height = `${res}px`\n                                            }\n                                        }}\n                                        onStop={() => { }}>\n                                        <div className=\"ta-c\" style={{ cursor: 'ns-resize' }}><MenuOutlined /></div>\n                                    </Draggable>\n                                    <div className=\"ptb8 plr16 bor-l bor-r b-side d-f ac jc-b bg-w\">\n                                        <div className=\"d-f ac\">\n                                            <Switch className=\"mr8\"\n                                                checked={editorStore[activeKey].smartShow}\n                                                unCheckedChildren={t('正常模式')}\n                                                checkedChildren={t('智能模式')} onChange={(checked) => {\n                                                    setEditorState({ smartShow: checked })\n                                                }} />\n                                            {\n                                                editorStore[activeKey].smartShow ? <InputSearch\n                                                    value={editorStore[activeKey].smartContent}\n                                                    isOpenSearchMatch\n                                                    onChange={(value: any) => {\n                                                        setEditorState({\n                                                            smartContent: value,\n                                                        })\n                                                    }}\n                                                    onSearch={(value) => {\n                                                        setEditorState({\n                                                            smartCache: sqlMap[value],\n                                                            loading: true,\n                                                        })\n\n                                                        const timer = setInterval(() => {\n                                                            const currentContent = editorStoreRef.current[activeKey].content || ''\n                                                            if (editorStoreRef.current[activeKey].smartCache) {\n                                                                let smartCache = editorStoreRef.current[activeKey].smartCache || ''\n                                                                const tarStr = smartCache.substr(0, 20)\n                                                                smartCache = smartCache.replace(tarStr, '')\n\n                                                                setEditorState({\n                                                                    smartCache,\n                                                                    content: currentContent + tarStr\n                                                                })\n                                                            } else {\n                                                                clearInterval(editorStoreRef.current[activeKey].smartTimer)\n                                                                setEditorState({\n                                                                    smartCache: '',\n                                                                    smartTimer: undefined,\n                                                                    loading: false,\n                                                                })\n                                                            }\n                                                        }, 800)\n\n                                                        setEditorState({\n                                                            smartTimer: timer,\n                                                        })\n                                                    }}\n                                                    options={[\n                                                        'test',\n                                                    ]} placeholder={t('AI智能生成(企业版)')} width={'240px'} /> : null\n                                            }\n                                        </div>\n                                        <div className=\"d-f ac\">\n                                            <ConfigFormData\n                                                ref={configDataComponentRefs}\n                                                dataValue={editorStore[activeKey]}\n                                                onChange={(dataValue) => {\n                                                    setEditorState(dataValue)\n                                                }}\n                                                onConfigChange={(option) => {\n                                                    setConfigOption(option)\n                                                    setEditorState({\n                                                        database: 'db'\n                                                    })\n                                                }}\n                                                option={configOptionRef.current} />\n                                            <Button className=\"ml16\" type=\"primary\" loading={editorStore[activeKey].status === 'running'} onClick={() => {\n                                                configDataComponentRefs.current.onSubmit().then((res: any) => {\n                                                    runTask()\n                                                })\n                                            }}>{t('运行')}<RightCircleOutlined /></Button>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex1 bor b-side s0 bg-w p-r ov-a\" style={{ height: 'calc(100% - 80px)' }}>\n                                        <div className=\"pt8\">\n                                            <div className=\"tag-result bg-theme c-text-w mr16\">\n                                                {t('结果')}\n                                            </div>\n                                        </div>\n                                        <div className=\"plr16 pt8\">\n                                            <TaskList\n                                                option={editorStore[activeKey].taskMap}\n                                                onDelete={(id) => {\n                                                    Modal.confirm({\n                                                        title: t('删除'),\n                                                        icon: <ExclamationCircleOutlined />,\n                                                        content: `${t('确定删除')}?`,\n                                                        okText: t('确认删除'),\n                                                        cancelText: t('取消'),\n                                                        okButtonProps: { danger: true },\n                                                        onOk() {\n                                                            let taskMap = editorStore[activeKey].taskMap\n                                                            clearTaskTimer(activeKey, id)\n                                                            delete taskMap[id]\n                                                            setEditorState({\n                                                                taskMap\n                                                            })\n                                                        },\n                                                        onCancel() { },\n                                                    });\n                                                }}\n                                                onRetry={(id) => {\n                                                    pollGetRes(id)\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Tabs.TabPane>\n                    ))}\n                </Tabs>\n            </div>\n        </div>\n    )\n}\n"],"names":["InputSearch","props","id","Math","random","toString","substring","inputRef","dataCache","setDataCache","useState","options","value","setValue","useEffect","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","_jsx","children","preStr","nextStr","length","_jsxs","className","debounceScroll","fun","timer","time","arguments","undefined","_len","args","Array","_key","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","style","width","Input","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","concat","maxHeight","loading","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","ResizableTitle","_ref","onResize","restProps","Resizable","height","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","dataFormat","setDataFormat","header","data","filterValue","setFilterValue","cols","setCols","columns","handleResize","_","_ref2","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","scroll","t","i18n","useTranslation","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","Space","direction","Modal","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","Checkbox","Group","label","defaultValue","bottom","Button","type","Tabs","TabPane","tab","text","onCopy","message","success","cursor","minHeight","titleNode","buttonNode","cancelExportData","Row","justify","align","Col","marginLeft","ConfigProvider","renderEmpty","customizeRenderEmpty","flexDirection","src","emptyImg","alt","Table","components","cell","pagination","rowSelection","actionRun","params","axios","post","actionGetDataSearchRes","task_id","get","getIdexTaskDownloadUrl","separator","getIdexTaskResult","stopIndxTask","getIdexFormConfig","CodeEdit","_Fragment","CodeMirror","theme","bbedit","extensions","sql","zebraStripes","step","lightColor","darkColor","stepMap","statusIconMap","status","LoadingOutlined","CloseCircleOutlined","color","QuestionCircleOutlined","TaskList","visibleDownload","setVisibleDownload","visibleResult","setVisibleResult","loadingResult","setLoadingResult","_setSeparator","separatorRef","useRef","setSeparator","current","currentReqId","_setCurrentReqId","currentReqIdRef","handleResultData","result","targetData","slice","config","key","destroyOnClose","Select","then","window","open","download_url","catch","err","console","log","Collapse","defaultActiveKey","entries","option","reverse","reqId","Panel","extra","onDelete","DeleteOutlined","onRetry","RedoOutlined","Steps","Step","icon","TableBox","record","render","Tooltip","placement","info","okText","content","span","startTime","duration","onOk","confirm","StopOutlined","cancelText","Promise","resolve","reject","error","handleData","finally","database","table","startime","React","form","Form","useForm","updateState","useImperativeHandle","onSubmit","validateFields","setData","setFieldsValue","dataValue","dispatchRenderFormItem","itemProps","renderSelect","Item","name","rules","required","initialValue","marginBottom","marginRight","mode","multiple","showSearch","disable","optionFilterProp","placeHolder","rowOption","relate","relateId","relateOption","currentOption","i","onConfigChange","getFieldsValue","renderInputSelect","inputSelectOption","component","createId","cookies","sqlMap","DataSearch","initCurrentEditorData","tabId","smartShow","smartContent","smartCache","smartTimer","taskMap","initEditorData","parse","getItem","initEditorDataList","activeKey","_setActiveKey","activeKeyRef","setActiveKey","editorStore","_seteditorStore","editorStoreRef","seteditorStore","configOption","_setConfigOption","configOptionRef","setConfigOption","initialPanes","panes","setPanes","newTabIndex","columnConfig","setColumnConfig","dataList","setDataList","configDataComponentRefs","setEditorState","currentState","targetRes","currentTaskMap","targetDom","document","getElementById","obj","onmousedown","dir","firstX","clientX","firstY","clientY","offsetWidth","offsetHeight","Left","offsetLeft","Top","offsetTop","onmousemove","onmouseup","clearEditorTaskTimerByKey","_ref3","tag","clearInterval","_ref4","task","clearTaskTimer","taskId","currentEditorStore","_ref5","pollGetRes","fetchData","state","err_msg","result_url","spark_log_url","stage","downloadUrl","starTime","Date","valueOf","nowTime","data2Time","setInterval","moment","format","newActiveKey","onEdit","targetKey","action","add","currentIndex","warn","newPanes","initState","lastIndex","pane","remove","_editorStore$activeKe2","_editorStore$activeKe3","closable","LoadingStar","Draggable","axis","onStart","onDrag","showBoxDom","body","y","onStop","MenuOutlined","Switch","checked","unCheckedChildren","checkedChildren","currentContent","tarStr","substr","replace","ConfigFormData","runTask","_editorStore$activeKe","customParams","ExclamationCircleOutlined","RightCircleOutlined","okButtonProps","danger"],"sourceRoot":""}