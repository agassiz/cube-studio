{"version":3,"file":"static/js/111.476533ce.chunk.js","mappings":"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","sources":["components/EchartCore/EchartCore.tsx","components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/FileUploadPlus/FileUploadPlus.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx","pages/ChartOptionTempalte.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport * as echarts from 'echarts';\n// import * as echarts from 'echarts/core';\n// import {\n//     BarChart,\n//     // 系列类型的定义后缀都为 SeriesOption\n//     BarSeriesOption,\n//     PieChart,\n//     PieSeriesOption,\n//     LineChart,\n//     LineSeriesOption,\n//     HeatmapChart,\n//     HeatmapSeriesOption\n// } from 'echarts/charts';\n// import {\n//     TitleComponent,\n//     // 组件类型的定义后缀都为 ComponentOption\n//     TitleComponentOption,\n//     TooltipComponent,\n//     TooltipComponentOption,\n//     GridComponent,\n//     GridComponentOption,\n//     // 数据集组件\n//     DatasetComponent,\n//     DatasetComponentOption,\n//     LegendComponent,\n//     // 内置数据转换器组件 (filter, sort)\n//     TransformComponent,\n//     CalendarComponentOption,\n//     CalendarComponent,\n//     VisualMapComponent,\n//     VisualMapComponentOption,\n//     ToolboxComponent\n// } from 'echarts/components';\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport './EchartCore.less';\nimport { Spin } from 'antd';\nimport { FieldNumberOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\n\nexport type ECOption = echarts.EChartsOption\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\n// export type ECOption = echarts.ComposeOption<\n//     | BarSeriesOption\n//     | LineSeriesOption\n//     | TitleComponentOption\n//     | TooltipComponentOption\n//     | GridComponentOption\n//     | DatasetComponentOption\n//     | CalendarComponentOption\n//     | HeatmapSeriesOption\n//     | VisualMapComponentOption\n//     | PieSeriesOption\n// >;\n\n// // 注册必须的组件\n// echarts.use([\n//     LegendComponent,\n//     TitleComponent,\n//     TooltipComponent,\n//     GridComponent,\n//     DatasetComponent,\n//     TransformComponent,\n//     CalendarComponent,\n//     VisualMapComponent,\n//     ToolboxComponent,\n//     BarChart,\n//     LineChart,\n//     PieChart,\n//     LabelLayout,\n//     HeatmapChart,\n//     UniversalTransition,\n//     CanvasRenderer\n// ]);\n\ninterface IProps {\n    // option: ECOption\n    option: echarts.EChartsOption\n    loading?: boolean\n    title?: string\n    style?: React.CSSProperties\n    unit?: string\n    data?: {\n        xData: any[]\n        yData: any[]\n    }\n    isNoData?: boolean\n}\n\nconst defaultChartStyle: React.CSSProperties = {\n    height: 300\n}\n\n// https://echarts.apache.org/handbook/zh/how-to/data/dynamic-data\nexport default function EchartCore(props: IProps) {\n    const [chartInstance, setChartInstance] = useState<echarts.ECharts>()\n    const id = Math.random().toString(36).substring(2);\n    const { t, i18n } = useTranslation();\n\n    const option = {}\n\n    useEffect(() => {\n        const chartDom = document.getElementById(id)\n        if (chartDom) {\n            const chart = echarts.init(chartDom);\n            chart.setOption({ ...option, ...props.option })\n\n            if (!chartInstance) {\n                setChartInstance(chart)\n            }\n        }\n    }, [props.option, props.data])\n\n    return (\n        <Spin spinning={props.loading}>\n            <div className=\"chart-container\">\n                <div id={id} style={{ ...defaultChartStyle, ...props.style }}></div>\n                {\n                    props.isNoData ? <div className=\"chart-nodata\">\n                        <div>{t('暂无数据')}</div>\n                    </div> : null\n                }\n            </div>\n        </Spin>\n    )\n}\n","import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\n// import ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst customizeRenderEmpty = () => (\n\t\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t\t<div>{t('暂无数据')}</div>\n\t\t</Row>\n\t);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== t('操作'));\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\t// const handleClickOutputExcel = () => {\n\t// \tconst option: any = {};\n\t// \toption.fileName = 'result';\n\t// \toption.datas = [\n\t// \t\t{\n\t// \t\t\tsheetData: dataFormat.data,\n\t// \t\t\tsheetName: 'sheet',\n\t// \t\t\tsheetHeader: dataFormat.header,\n\t// \t\t},\n\t// \t];\n\t// \tconst toExcel = new ExportJsonExcel(option);\n\t// \ttoExcel.saveExcel();\n\t// };\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={t('导出数据')}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">{t('选择需要导出的列')}：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('全选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('反选')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success(t('已复制到粘贴板'))}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t{/* <Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane> */}\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t{t('导出数据')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst { t, i18n } = useTranslation();\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText={t('确定')}\n\t\t\tcancelText={t('取消')}\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\nimport { useTranslation } from 'react-i18next';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tconst { t, i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请选择key') }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('请选择')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请填写value') }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t{t('查询')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>{t('展开')}</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>{t('收起')}</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import { AudioOutlined, CloseOutlined, DeleteColumnOutlined, DeleteFilled, DeleteOutlined, InboxOutlined, LoadingOutlined, PlusOutlined, VideoCameraAddOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { useEffect, useState } from 'react'\nimport './FileUploadPlus.less';\n\ninterface Iprops {\n    type?: TFileType\n    onChange?: (value: any) => void\n    value?: string[]\n    maxCount?: number\n    maxSize?: number\n    format?: string[]\n}\n\ntype TFileType = 'file' | 'video' | 'audio'\n\nexport default function FileUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n    const [fileList, setFileList] = useState<UploadFile[]>([])\n\n    // useEffect(() => {\n    //     setFileList(props.value || [])\n    // }, [props.value])\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: RcFile) {\n        console.log('file', file);\n\n        const maxCount = props.maxCount || 1\n        if (fileList.length >= maxCount) {\n            message.error('超出文件数量限制');\n            return false\n        }\n        // 'image/jpeg' || 'video/mp4' || 'audio/mpeg'\n        const isFormatOk = props.format?.includes(file.type);\n        if (!isFormatOk) {\n            message.error('文件格式错误');\n        }\n        const isLt2M = file.size < (props.maxSize || 2 * 1024 * 1024);\n        if (!isLt2M) {\n            message.error('文件大小限制');\n        }\n        return isFormatOk && isLt2M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n        }\n        if (info.file.status === \"removed\") {\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n            return;\n        }\n    };\n\n    const file2Bin = (file?: RcFile) => {\n        console.log('file2Bin', file);\n        return new Promise((resolve, reject) => {\n            if (file) {\n                let name = file.name.replace(/.+\\./, '');\n                let filename = file.name;\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => {\n                    resolve(reader.result)\n                }\n            } else {\n                reject(undefined)\n            }\n        })\n    }\n\n    //建立一个可存取到该file的url\n    function getObjectURL(file: any) {\n        var url = null;\n        if ((window as any).createObjectURL != undefined) { // basic\n            url = (window as any).createObjectURL(file);\n        } else if (window.URL != undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file);\n        } else if (window.webkitURL != undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file);\n        }\n        return url;\n    }\n\n    const createMediaPreview = (file: UploadFile<any>, fileIndex: number, type: TFileType) => {\n        const url = getObjectURL(file)\n        const key = Math.random().toString(36).substring(2);\n        if (type === 'video') {\n            return <div className=\"p-r\" key={key}>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                        props.onChange && props.onChange(currentFileList)\n                    }}\n                    className=\"d-il p-a plr8 ptb2 bg-fail\"\n                    style={{ top: 0, right: 0, borderBottomLeftRadius: 6, zIndex: 9 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n                <video className=\"w100 mb8\" src={url} controls></video>\n            </div>\n        } else if (type === 'audio') {\n            return <div className=\"d-f ac mb8\" key={key}>\n                <audio className=\"w100 flex1\" src={url} controls></audio>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                        props.onChange && props.onChange(currentFileList)\n                    }}\n                    className=\"d-il plr8 ptb2 bg-fail\"\n                    style={{ borderRadius: 6 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n            </div>\n        }\n        return file\n    }\n\n    return (\n        <>\n            <div>\n                {\n                    fileList.map((file, fileIndex) => {\n                        return createMediaPreview(file, fileIndex, props.type || 'file')\n                    })\n                }\n            </div>\n            <Upload.Dragger\n                // name=\"file\"\n                fileList={fileList}\n                showUploadList={false}\n                customRequest={(options) => {\n                    console.log(options.file);\n                    const tarList = [...fileList, options.file as RcFile]\n                    setFileList(tarList)\n\n                    Promise.all(tarList.map((item: any) => file2Bin(item))).then(res => {\n                        console.log(res)\n                        props.onChange && props.onChange(res)\n                    })\n\n                    // getBase64(options.file, (imageUrl: string) => {\n                    //     // setImgUrl(imageUrl);\n                    //     const tarList = [...imageList, imageUrl]\n                    //     setImageList(tarList)\n                    //     setFileLoading(false);\n                    //     props.onChange && props.onChange(tarList)\n                    // });\n                }}\n                beforeUpload={beforeUpload}\n                onChange={handleChange}\n            >\n                <p className=\"ant-upload-drag-icon\">\n                    {\n                        (props.type === 'file' || !props.type) ? <InboxOutlined /> : null\n                    }\n                    {\n                        props.type === 'video' ? <VideoCameraAddOutlined /> : null\n                    }\n                    {\n                        props.type === 'audio' ? <AudioOutlined /> : null\n                    }\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\n            </Upload.Dragger>\n        </>\n    )\n}\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Space, Steps, Tooltip } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { MinusCircleOutlined, PlusOutlined, QuestionCircleOutlined, SyncOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\nimport 'moment/locale/zh-cn';\nimport locale from 'antd/es/date-picker/locale/zh_CN';\nimport { useTranslation } from 'react-i18next';\nimport FileUploadPlus from '../FileUploadPlus/FileUploadPlus';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value?: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select' | 'fileUpload'\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n    const { t, i18n } = useTranslation();\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderFileUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus />\n        </Form.Item>\n    }\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n\n        let extraContent: any = null\n\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={<>\n                            {config.data.tips ? <Tooltip\n                                className=\"mr8\"\n                                placement=\"bottom\"\n                                title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                            >\n                                <div className=\"cp d-il\">\n                                    <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                                    <span className=\"pl4 c-theme\">{t('详情')}</span>\n                                </div>\n                            </Tooltip> : null}\n                            {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        </>}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <InputSearch\n                onClick={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                isOpenSearchMatch={true}\n                disabled={config.disable}\n                placeholder={`${t('请选择')}${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\n        </Form.Item>\n    }\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span className=\"pr4\" dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                {\n                    config.data.isRefresh ? <div className=\"cp d-il\" onClick={() => {\n                        props.onRetryInfoChange && props.onRetryInfoChange()\n                    }}>\n                        <SyncOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">{t('刷新列表')}</span>\n                    </div> : null\n                }\n            </>}\n            {...itemProps}\n        >\n            <Select\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={config.placeHolder || `${t('请选择')}${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: t('请选择时间') }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: t('请选择时间范围') }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            case 'fileUpload':\n                return renderFileUpload(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                // <Space key={key} style={{ display: 'flex', marginBottom: 8 }}\n                                //     align='baseline'\n                                // >\n                                //     {\n                                //         item.list && item.list.map(listItem => {\n                                //             return dispatchRenderFormItem(listItem, {\n                                //                 ...restField,\n                                //                 name: [name, listItem.name],\n                                //                 // style: { flexDirection: 'column' }\n                                //             })\n                                //         })\n                                //     }\n                                //     {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                //     <Form.Item wrapperCol={{ offset: 5 }}>\n                                //         <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                //             删除该项\n                                //         </Button>\n                                //     </Form.Item>\n                                // </Space>\n                                <div key={key} className=\"bor b-side pt8 plr16 mb8 d-f\" style={{ alignItems: 'start', minWidth: 1600 }}>\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name],\n                                                labelAlign: 'left',\n                                                labelCol: 24,\n                                                style: { flexDirection: 'column', flex: 1, marginBottom: 8 },\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item >\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />} style={{ width: 120 }}>\n                                            {t('删除该项')}\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\" label=\"\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    {t('增加一项')}\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return <div style={{ width: 680 }}>\n                    {dispatchRenderFormItem(item)}\n                </div>\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                {t('上一步')}\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                {t('下一步')}\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">{t('点击确定完成提交')}</div>\n                            )}\n                        </div>\n                    </div>\n                </> : <div style={{ width: 680 }}>\n                    {\n                        renderFormItem(currentConfig || [])\n                    }\n                </div>\n            }\n        </>\n    )\n}\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination, Switch } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, actionADUGTemplateRetryInfo, actionADUGTemplateFavorite, actionADUGTemplateCancelFavorite, actionADUGTemplateChartOption } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig } from '../components/DynamicForm/DynamicForm';\nimport ChartOptionTempalte from './ChartOptionTempalte';\nimport { useTranslation } from 'react-i18next';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n    only_favorite?: boolean\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `${t('共')}${total}${t('条')}`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n\n    let customFormData: Record<string, string> = {}\n    try {\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\n    } catch (err) { }\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\n    const [list_ui_args, setList_ui_args] = useState<{\n        card_width: string\n        card_height: string\n    }>()\n    const [opsLink, setOpsLink] = useState<Array<{\n        text: string\n        url: string\n    }>>([])\n    const [listColumns, setListColumns] = useState<string[]>([])\n    const [isAllDataList, _setIsAllDataList] = useState(true)\n    const isAllDataListRef = useRef(isAllDataList);\n    const setIsAllDataList = (data: boolean): void => {\n        isAllDataListRef.current = data;\n        _setIsAllDataList(data);\n    };\n    const [isShowCollect, _setIsShowCollect] = useState(false)\n    const isShowCollectRef = useRef(isShowCollect);\n    const setIsShowCollect = (data: boolean): void => {\n        isShowCollectRef.current = data;\n        _setIsShowCollect(data);\n    };\n    const [isEchartShow, setIsEchartShow] = useState(false)\n    const [pageSize, setPageSize] = useState(PAGE_SIZE)\n    const [listTitle, setListTitle] = useState<string>()\n\n    const { t, i18n } = useTranslation();\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n\n    }, [pageSize])\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            if (type === 'file') {\n                type = 'fileUpload'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `${t('请选择')} ${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `${t('请输入')} ${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `${t('请按正确的规则输入')}` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `${t('请输入正确的长度')}` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n        setLoadingAdd(true)\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data,\n                list_ui_type,\n                list_ui_args,\n                ops_link,\n                enable_favorite,\n                echart,\n                page_size,\n                list_title\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: t('操作'),\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        isShowCollectRef.current && isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('收藏'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定收藏')}?`,\n                                                okText: t('确认收藏'),\n                                                cancelText: t('取消'),\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('收藏成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('收藏失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>{t('收藏')}</div></Menu.Item> : null\n                                    }\n                                    {\n                                        isShowCollectRef.current && !isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('取消收藏'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定取消收藏')}?`,\n                                                okText: t('确认取消收藏'),\n                                                cancelText: t('取消'),\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateCancelFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('操作成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('操作失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>{t('取消收藏')}</div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            {t('详情')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn(t('用户没有修改权限'))\n                                            })\n                                        }}>\n                                            {t('修改')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: t('删除'),\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: `${t('确定删除')}?`,\n                                                okText: t('确认删除'),\n                                                cancelText: t('取消'),\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success(t('删除成功'));\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error(t('删除失败'));\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            {t('删除')}\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: t('确认'),\n                                                    cancelText: t('取消'),\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve(res);\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject(err);\n                                                                });\n                                                        })\n                                                            .then((res: any) => {\n                                                                message.success(t('操作成功'));\n\n                                                                if (res.data.result.link) {\n                                                                    window.open(res.data.result.link, 'bank')\n                                                                }\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error(t('操作失败'));\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {t(`${action.text}`)}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">{t('更多')}<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            if (customFormData && Object.keys(customFormData).length) {\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\n                let reTryInfoFlag = reTryInfoQuene.length\n\n                const handleReTryInfo = (tar: string) => {\n                    reTryInfoFlag = reTryInfoFlag - 1;\n\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                            return {\n                                group: group.group,\n                                expanded: group.expanded,\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\n                            }\n                        })\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                        setDynamicFormDataAdd(formReset)\n                        setDynamicFormConfigAdd(formConfigAdd)\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n                        if (reTryInfoFlag) {\n                            const resTar = JSON.stringify(formReset)\n                            handleReTryInfo(resTar)\n                        }\n                    }).catch(err => {\n                        message.error(t('字段切换错误'))\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }\n\n                if (reTryInfoQuene.length) {\n                    const formRes = customFormData\n                    for (const key in formRes) {\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                            const value = formRes[key];\n                            if (value === undefined) {\n                                delete formRes[key]\n                            }\n                        }\n                    }\n                    const tar = JSON.stringify(formRes)\n\n                    handleReTryInfo(tar)\n                }\n            }\n\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            edit_columns.forEach((item) => {\n                if (item['ui-type'] === 'list') {\n                    item.info.forEach((itemInfo: any) => {\n                        updateColumnsMap[itemInfo.name] = itemInfo\n                    })\n                }\n            })\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error(t('filter解析异常'))\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setListTitle(list_title)\n            setPageSize(page_size)\n            setIsEchartShow(echart)\n            setIsShowCollect(enable_favorite)\n            setOpsLink(ops_link)\n            setListColumns(list_columns)\n            setList_ui_type(list_ui_type)\n            setList_ui_args(list_ui_args)\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n\n            fetchData({\n                pageConf: {\n                    ...pageInfoInit,\n                    pageSize: page_size\n                },\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n            setLoadingAdd(false)\n        })\n    }, []);\n\n    const formatFilterParams = (params: any[], paramsMap: Record<string, any>) => {\n        let formatData = undefined\n        const temlateId = getParam('id')\n\n        formatData = {\n            filters: [\n                temlateId ? {\n                    col: props?.model_name,\n                    opr: \"rel_o_m\",\n                    value: +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n\n                    return {\n                        col: param.key,\n                        opr: opr,\n                        value: param.value\n                    }\n                })\n            ].filter(item => !!item),\n        }\n        return formatData\n    }\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter,\n        only_favorite\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined,\n            only_favorite: false\n        }) => {\n        setLoading(true);\n\n        const form_data = JSON.stringify({\n            ...formatFilterParams(params, paramsMap),\n            only_favorite,\n            str_related: 1,\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: t('确认'),\n                cancelText: t('取消'),\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success(t('操作成功'));\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error(t('操作失败'));\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn(t('请先选择'))\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            const isXLS = file.name.indexOf('.xls') !== -1;\n            const isJson = file.name.indexOf('.json') !== -1;\n            const isXLSX = file.name.indexOf('.xlsx') !== -1;\n            if (isCSV || isJson || isXLS || isXLSX) {\n                return true\n            } else {\n                message.error(`文件格式支持CSV/JSON/XLS/XLSX`);\n            }\n        },\n        onChange(info) {\n            if (info.file.status === 'done') {\n                notification['success']({\n                    message: t('导入成功'),\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                notification['error']({\n                    message: t('导入失败'),\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in h100 d-f fd-c\">\n            {/* 添加 */}\n            <ModalForm\n                title={`${t('添加')} ${labelTitle}`}\n                // width={1000}\n                formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`${t('添加')} ${labelTitle} ${t('成功')}`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`${t('添加')} ${labelTitle} ${t('失败')}`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error(t('字段切换错误'))\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`${t('修改')} ${labelTitle}`}\n                // width={1500}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\n                        let value = next.value;\n                        value = moment(value)\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\n                        const value = (next.value || []).map((item: any) => {\n                            for (const listItemKey in item) {\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\n                                    const listItemValue = item[listItemKey];\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\n                                        item[listItemKey] = moment(listItemValue)\n                                    }\n                                }\n                            }\n                            return item\n                        })\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`${t('更新')} ${labelTitle} ${t('成功')}`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`${t('更新')} ${labelTitle} ${t('失败')}`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle} ${t('详情')}`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\n                                        __html: (() => {\n                                            let content = item.value\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\n                                                try {\n                                                    content = JSON.stringify(item.value)\n                                                } catch (error) { }\n                                            }\n                                            return content\n                                        })()\n                                    }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />{t('返回')}</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-icon-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>{t('帮助链接')}</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title h100 d-f fd-c\">\n                <div className=\"mlr16 mb16 flex1 bg-w\">\n                    {\n                        !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                            localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                            setFilterValues(values)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfoInit,\n                                params: values,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        }} />\n                    }\n\n                    {\n                        isEchartShow ? <ChartOptionTempalte url={baseUrl} /> : null\n                    }\n\n                    {\n                        list_ui_type !== 'card' ? <TableBox\n                            cancelExportData={true}\n                            tableKey={`tablebox_${location.pathname}`}\n                            titleNode={<Col className=\"tablebox-title\">\n                                <div className=\"d-f ac\">\n                                    <div className=\"mr8\">{listTitle || ''}</div>\n                                    {\n                                        isShowCollect ? <div className=\"pb2\">\n                                            <Switch checked={isAllDataList} checkedChildren={t('全部')} unCheckedChildren={t('我的收藏')} defaultChecked onChange={(checked) => {\n                                                setIsAllDataList(checked)\n                                                fetchData({\n                                                    ...fetchDataParams,\n                                                    pageConf: pageInfoInit,\n                                                    params: filterValues,\n                                                    sorter: sorterParam,\n                                                    paramsMap: filterParamsMap,\n                                                    only_favorite: !checked\n                                                });\n                                            }} />\n                                        </div> : null\n                                    }\n                                </div>\n                            </Col>}\n                            buttonNode={<div className=\"d-f ac\">\n                                {\n                                    opsLink && opsLink.length ? opsLink.map(config => {\n                                        return <Button type=\"primary\" className=\"mr16\" onClick={() => {\n                                            window.open(config.url, 'bank')\n                                        }}>{config.text}</Button>\n                                    }) : null\n                                }\n\n                                {\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>{t('添加')}{labelTitle}<PlusOutlined /></Button> : null\n                                }\n                                <div>\n                                    <Dropdown overlay={<Menu>\n                                        {\n                                            multipleAction.map((action, index) => {\n                                                return <Menu.Item key={`table_muliple_${index}`}>\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                        {`${t('批量')} ${action.text}`}\n                                                    </span>\n                                                </Menu.Item>\n                                            })\n                                        }\n\n                                    </Menu>}>\n                                        <Button>{t('批量操作')} <DownOutlined /></Button>\n                                    </Dropdown>\n                                </div>\n                                {\n                                    isImportData ? <div className=\"d-f ml16\">\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\"><div>{t('注意：csv逗号分隔')}，</div><div>{t('第一行为列的英文名')}</div> <div className=\"link\" onClick={() => {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                        }}>{(t('下载导入模板'))}</div></span>} placement=\"topLeft\">\n                                            <Upload {...uploadConfig}>\n                                                <Button className=\"\" icon={<UploadOutlined />}>{t('批量导入数据')}</Button>\n                                            </Upload>\n                                        </Tooltip>\n                                    </div> : null\n                                }\n                                {\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                        Modal.confirm({\n                                            title: t('导出数据'),\n                                            icon: <ExclamationCircleOutlined />,\n                                            content: '',\n                                            okText: t('确认导出数据'),\n                                            cancelText: t('取消'),\n                                            onOk() {\n                                                const formatData = formatFilterParams(filterValues, filterParamsMap)\n                                                const form_data = JSON.stringify(formatData)\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download?form_data=${form_data}`)\n                                                message.success(t('导出成功'));\n                                            },\n                                            onCancel() { },\n                                        });\n                                    }}>{t('批量导出')}  <ExportOutlined /></Button> : null\n                                }\n\n                            </div>}\n                            rowKey={(record: any) => {\n                                return JSON.stringify(record)\n                            }}\n                            columns={currentColumns}\n                            loading={loading}\n                            pagination={pageInfo}\n                            dataSource={dataList}\n                            onChange={(pageInfo: any, filters, sorter: any) => {\n                                const tarSorter = sorter.order ? {\n                                    order_column: sorter.columnKey,\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                                } as ISorterParam : undefined\n\n                                fetchData({\n                                    ...fetchDataParams,\n                                    pageConf: pageInfo,\n                                    params: filterValues,\n                                    paramsMap: filterParamsMap,\n                                    sorter: tarSorter\n                                });\n                            }}\n                            rowSelection={{\n                                type: 'checkbox',\n                                fixed: 'left',\n                                columnWidth: 32,\n                                selectedRowKeys,\n                                onChange: (selectedRowKeys) => {\n                                    setSelectedRowKeys(selectedRowKeys)\n                                }\n                            }}\n                            scroll={{ x: tableWidth, y: scrollY }}\n                        /> : <div className=\"bg-w p16\">\n                            <div className=\"d-f fw\">\n                                {\n                                    dataList.map((row, rowIndex) => {\n                                        return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\n                                            {\n                                                Object.keys(row).map((key, itemIndex) => {\n                                                    if (listColumns.includes(key)) {\n                                                        return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\n                                                    }\n                                                    return null\n                                                })\n                                            }\n                                        </div>\n                                    })\n                                }\n                            </div>\n                            <div className=\"ta-r\">\n                                <Pagination {...pageInfo} onChange={(page, pageSize) => {\n                                    fetchData({\n                                        ...fetchDataParams,\n                                        pageConf: {\n                                            ...pageInfo,\n                                            current: page,\n                                            pageSize\n                                        },\n                                        params: filterValues,\n                                        paramsMap: filterParamsMap,\n                                    });\n                                }} />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { actionADUGTemplateChartOption } from '../api/kubeflowApi'\nimport EchartCore, { ECOption } from '../components/EchartCore/EchartCore'\n\ninterface IProps {\n    url?: string\n}\n\nexport default function ChartOptionTempalte(props: IProps) {\n    const [option, setOption] = useState<ECOption>({})\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (props.url) {\n            actionADUGTemplateChartOption(`${props.url}echart`, {}).then(res => {\n                const option = res.data.result\n                var currentOps: any = {}\n                eval(`currentOps=${option}`)\n                setOption(currentOps)\n            }).catch(err => { }).finally(() => {\n                setLoading(false)\n            })\n        }\n    }, [props.url])\n\n    return (\n        <EchartCore option={option} loading={loading} />\n    )\n}\n"],"names":["defaultChartStyle","height","EchartCore","props","useState","chartInstance","setChartInstance","id","Math","random","toString","substring","useTranslation","t","option","i18n","useEffect","chartDom","document","getElementById","chart","echarts","setOption","data","spinning","loading","className","style","isNoData","InputSearch","inputRef","options","dataCache","setDataCache","value","setValue","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","ResizableTitle","onResize","restProps","Resizable","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","scroll","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","label","defaultValue","bottom","type","tab","text","onCopy","message","cursor","minHeight","titleNode","buttonNode","cancelExportData","justify","align","marginLeft","renderEmpty","flexDirection","src","emptyImg","alt","components","cell","pagination","rowSelection","Title","Typography","styles","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","children","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","FileUploadPlus","setFileLoading","fileList","setFileList","createMediaPreview","file","fileIndex","url","window","createObjectURL","URL","webkitURL","getObjectURL","currentFileList","splice","borderBottomLeftRadius","zIndex","color","controls","borderRadius","showUploadList","customRequest","tarList","Promise","all","resolve","reject","replace","reader","FileReader","readAsDataURL","onload","result","beforeUpload","maxCount","isFormatOk","format","isLt2M","maxSize","status","InboxOutlined","VideoCameraAddOutlined","AudioOutlined","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","configItem","dep","valueId","effect","effectOption","findOptionInLinkAge","tarConfig","setValueInConfig","tarConfigGroup","configList","setValueInConfigGroup","keys","formValues","entries","renderInput","itemProps","initialValue","extra","tips","placement","dangerouslySetInnerHTML","__html","QuestionCircleOutlined","description","disable","dispatchRenderFormItem","retry_info","onRetryInfoChange","renderInputSelect","autoSize","minRows","renderTextArea","isRefresh","SyncOutlined","multiple","renderSelect","locale","showTime","disabledDate","moment","endOf","renderDatePicker","renderRangePicker","renderRadio","renderFileUpload","renderFormItem","list","restField","alignItems","minWidth","listItem","labelAlign","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Step","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","getParam","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","dynamicFormDataAdd","setDynamicFormDataAdd","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","setPrimaryKey","labelTitle","setLabelTitle","list_ui_type","setList_ui_type","list_ui_args","setList_ui_args","opsLink","setOpsLink","listColumns","setListColumns","isAllDataList","_setIsAllDataList","isAllDataListRef","isShowCollect","_setIsShowCollect","isShowCollectRef","isEchartShow","setIsEchartShow","setPageSize","listTitle","setListTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","getADUGTemplateApiInfo","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","ops_link","enable_favorite","echart","page_size","list_title","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","a","b","render","record","tarRes","actionList","singleAction","single","tableAction","fixed","overlay","Modal","ExclamationCircleOutlined","content","actionADUGTemplateFavorite","fetchData","actionADUGTemplateCancelFavorite","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","okButtonProps","actionADUGTemplateDelete","confirmation","actionADUGTemplateSingle","link","open","tarColumns","addColumnsMap","reTryInfoQuene","reTryInfoFlag","formRes","hasOwnProperty","handleReTryInfo","tar","actionADUGTemplateRetryInfo","exist_add_args","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","itemInfo","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setBaseUrl","setLabelMap","currentTableWidth","formatFilterParams","temlateId","model_name","opr","sourceOprList","currentOpr","only_favorite","form_data","str_related","page","getADUGTemplateList","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","headers","authorization","isCSV","isXLS","isJson","isXLSX","notification","response","Array","isArray","actionADUGTemplateAdd","tarIndex","listItemKey","listItemValue","actionADUGTemplateUpdate","whiteSpace","isSubRoute","reload","RollbackOutlined","crumbs","idx","ChartOptionTempalte","TableBox","checked","checkedChildren","unCheckedChildren","defaultChecked","actionADUGTemplateMuliple","ids","handleMultiRecord","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak","actionADUGTemplateChartOption","currentOps","eval"],"sourceRoot":""}